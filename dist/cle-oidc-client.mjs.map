{"version":3,"file":"cle-oidc-client.mjs","sources":["../__vite-browser-external","../node_modules/crypto-js/core.js","../node_modules/crypto-js/sha256.js","../node_modules/crypto-js/enc-base64.js","../node_modules/crypto-js/enc-utf8.js","../node_modules/jwt-decode/build/jwt-decode.esm.js","../node_modules/oidc-client-ts/dist/esm/oidc-client-ts.js","../src/utils.ts","../src/auth.ts"],"sourcesContent":["export default {}",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory();\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\troot.CryptoJS = factory();\n\t}\n}(this, function () {\n\n\t/*globals window, global, require*/\n\n\t/**\n\t * CryptoJS core components.\n\t */\n\tvar CryptoJS = CryptoJS || (function (Math, undefined) {\n\n\t    var crypto;\n\n\t    // Native crypto from window (Browser)\n\t    if (typeof window !== 'undefined' && window.crypto) {\n\t        crypto = window.crypto;\n\t    }\n\n\t    // Native crypto in web worker (Browser)\n\t    if (typeof self !== 'undefined' && self.crypto) {\n\t        crypto = self.crypto;\n\t    }\n\n\t    // Native crypto from worker\n\t    if (typeof globalThis !== 'undefined' && globalThis.crypto) {\n\t        crypto = globalThis.crypto;\n\t    }\n\n\t    // Native (experimental IE 11) crypto from window (Browser)\n\t    if (!crypto && typeof window !== 'undefined' && window.msCrypto) {\n\t        crypto = window.msCrypto;\n\t    }\n\n\t    // Native crypto from global (NodeJS)\n\t    if (!crypto && typeof global !== 'undefined' && global.crypto) {\n\t        crypto = global.crypto;\n\t    }\n\n\t    // Native crypto import via require (NodeJS)\n\t    if (!crypto && typeof require === 'function') {\n\t        try {\n\t            crypto = require('crypto');\n\t        } catch (err) {}\n\t    }\n\n\t    /*\n\t     * Cryptographically secure pseudorandom number generator\n\t     *\n\t     * As Math.random() is cryptographically not safe to use\n\t     */\n\t    var cryptoSecureRandomInt = function () {\n\t        if (crypto) {\n\t            // Use getRandomValues method (Browser)\n\t            if (typeof crypto.getRandomValues === 'function') {\n\t                try {\n\t                    return crypto.getRandomValues(new Uint32Array(1))[0];\n\t                } catch (err) {}\n\t            }\n\n\t            // Use randomBytes method (NodeJS)\n\t            if (typeof crypto.randomBytes === 'function') {\n\t                try {\n\t                    return crypto.randomBytes(4).readInt32LE();\n\t                } catch (err) {}\n\t            }\n\t        }\n\n\t        throw new Error('Native crypto module could not be used to get secure random number.');\n\t    };\n\n\t    /*\n\t     * Local polyfill of Object.create\n\n\t     */\n\t    var create = Object.create || (function () {\n\t        function F() {}\n\n\t        return function (obj) {\n\t            var subtype;\n\n\t            F.prototype = obj;\n\n\t            subtype = new F();\n\n\t            F.prototype = null;\n\n\t            return subtype;\n\t        };\n\t    }());\n\n\t    /**\n\t     * CryptoJS namespace.\n\t     */\n\t    var C = {};\n\n\t    /**\n\t     * Library namespace.\n\t     */\n\t    var C_lib = C.lib = {};\n\n\t    /**\n\t     * Base object for prototypal inheritance.\n\t     */\n\t    var Base = C_lib.Base = (function () {\n\n\n\t        return {\n\t            /**\n\t             * Creates a new object that inherits from this object.\n\t             *\n\t             * @param {Object} overrides Properties to copy into the new object.\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         field: 'value',\n\t             *\n\t             *         method: function () {\n\t             *         }\n\t             *     });\n\t             */\n\t            extend: function (overrides) {\n\t                // Spawn\n\t                var subtype = create(this);\n\n\t                // Augment\n\t                if (overrides) {\n\t                    subtype.mixIn(overrides);\n\t                }\n\n\t                // Create default initializer\n\t                if (!subtype.hasOwnProperty('init') || this.init === subtype.init) {\n\t                    subtype.init = function () {\n\t                        subtype.$super.init.apply(this, arguments);\n\t                    };\n\t                }\n\n\t                // Initializer's prototype is the subtype object\n\t                subtype.init.prototype = subtype;\n\n\t                // Reference supertype\n\t                subtype.$super = this;\n\n\t                return subtype;\n\t            },\n\n\t            /**\n\t             * Extends this object and runs the init method.\n\t             * Arguments to create() will be passed to init().\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var instance = MyType.create();\n\t             */\n\t            create: function () {\n\t                var instance = this.extend();\n\t                instance.init.apply(instance, arguments);\n\n\t                return instance;\n\t            },\n\n\t            /**\n\t             * Initializes a newly created object.\n\t             * Override this method to add some logic when your objects are created.\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         init: function () {\n\t             *             // ...\n\t             *         }\n\t             *     });\n\t             */\n\t            init: function () {\n\t            },\n\n\t            /**\n\t             * Copies properties into this object.\n\t             *\n\t             * @param {Object} properties The properties to mix in.\n\t             *\n\t             * @example\n\t             *\n\t             *     MyType.mixIn({\n\t             *         field: 'value'\n\t             *     });\n\t             */\n\t            mixIn: function (properties) {\n\t                for (var propertyName in properties) {\n\t                    if (properties.hasOwnProperty(propertyName)) {\n\t                        this[propertyName] = properties[propertyName];\n\t                    }\n\t                }\n\n\t                // IE won't copy toString using the loop above\n\t                if (properties.hasOwnProperty('toString')) {\n\t                    this.toString = properties.toString;\n\t                }\n\t            },\n\n\t            /**\n\t             * Creates a copy of this object.\n\t             *\n\t             * @return {Object} The clone.\n\t             *\n\t             * @example\n\t             *\n\t             *     var clone = instance.clone();\n\t             */\n\t            clone: function () {\n\t                return this.init.prototype.extend(this);\n\t            }\n\t        };\n\t    }());\n\n\t    /**\n\t     * An array of 32-bit words.\n\t     *\n\t     * @property {Array} words The array of 32-bit words.\n\t     * @property {number} sigBytes The number of significant bytes in this word array.\n\t     */\n\t    var WordArray = C_lib.WordArray = Base.extend({\n\t        /**\n\t         * Initializes a newly created word array.\n\t         *\n\t         * @param {Array} words (Optional) An array of 32-bit words.\n\t         * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.create();\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);\n\t         */\n\t        init: function (words, sigBytes) {\n\t            words = this.words = words || [];\n\n\t            if (sigBytes != undefined) {\n\t                this.sigBytes = sigBytes;\n\t            } else {\n\t                this.sigBytes = words.length * 4;\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts this word array to a string.\n\t         *\n\t         * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex\n\t         *\n\t         * @return {string} The stringified word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     var string = wordArray + '';\n\t         *     var string = wordArray.toString();\n\t         *     var string = wordArray.toString(CryptoJS.enc.Utf8);\n\t         */\n\t        toString: function (encoder) {\n\t            return (encoder || Hex).stringify(this);\n\t        },\n\n\t        /**\n\t         * Concatenates a word array to this word array.\n\t         *\n\t         * @param {WordArray} wordArray The word array to append.\n\t         *\n\t         * @return {WordArray} This word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray1.concat(wordArray2);\n\t         */\n\t        concat: function (wordArray) {\n\t            // Shortcuts\n\t            var thisWords = this.words;\n\t            var thatWords = wordArray.words;\n\t            var thisSigBytes = this.sigBytes;\n\t            var thatSigBytes = wordArray.sigBytes;\n\n\t            // Clamp excess bits\n\t            this.clamp();\n\n\t            // Concat\n\t            if (thisSigBytes % 4) {\n\t                // Copy one byte at a time\n\t                for (var i = 0; i < thatSigBytes; i++) {\n\t                    var thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                    thisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);\n\t                }\n\t            } else {\n\t                // Copy one word at a time\n\t                for (var j = 0; j < thatSigBytes; j += 4) {\n\t                    thisWords[(thisSigBytes + j) >>> 2] = thatWords[j >>> 2];\n\t                }\n\t            }\n\t            this.sigBytes += thatSigBytes;\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Removes insignificant bits.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray.clamp();\n\t         */\n\t        clamp: function () {\n\t            // Shortcuts\n\t            var words = this.words;\n\t            var sigBytes = this.sigBytes;\n\n\t            // Clamp\n\t            words[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);\n\t            words.length = Math.ceil(sigBytes / 4);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this word array.\n\t         *\n\t         * @return {WordArray} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = wordArray.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone.words = this.words.slice(0);\n\n\t            return clone;\n\t        },\n\n\t        /**\n\t         * Creates a word array filled with random bytes.\n\t         *\n\t         * @param {number} nBytes The number of random bytes to generate.\n\t         *\n\t         * @return {WordArray} The random word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.random(16);\n\t         */\n\t        random: function (nBytes) {\n\t            var words = [];\n\n\t            for (var i = 0; i < nBytes; i += 4) {\n\t                words.push(cryptoSecureRandomInt());\n\t            }\n\n\t            return new WordArray.init(words, nBytes);\n\t        }\n\t    });\n\n\t    /**\n\t     * Encoder namespace.\n\t     */\n\t    var C_enc = C.enc = {};\n\n\t    /**\n\t     * Hex encoding strategy.\n\t     */\n\t    var Hex = C_enc.Hex = {\n\t        /**\n\t         * Converts a word array to a hex string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The hex string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var hexChars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                hexChars.push((bite >>> 4).toString(16));\n\t                hexChars.push((bite & 0x0f).toString(16));\n\t            }\n\n\t            return hexChars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a hex string to a word array.\n\t         *\n\t         * @param {string} hexStr The hex string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Hex.parse(hexString);\n\t         */\n\t        parse: function (hexStr) {\n\t            // Shortcut\n\t            var hexStrLength = hexStr.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < hexStrLength; i += 2) {\n\t                words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);\n\t            }\n\n\t            return new WordArray.init(words, hexStrLength / 2);\n\t        }\n\t    };\n\n\t    /**\n\t     * Latin1 encoding strategy.\n\t     */\n\t    var Latin1 = C_enc.Latin1 = {\n\t        /**\n\t         * Converts a word array to a Latin1 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The Latin1 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var latin1Chars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                latin1Chars.push(String.fromCharCode(bite));\n\t            }\n\n\t            return latin1Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Latin1 string to a word array.\n\t         *\n\t         * @param {string} latin1Str The Latin1 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);\n\t         */\n\t        parse: function (latin1Str) {\n\t            // Shortcut\n\t            var latin1StrLength = latin1Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < latin1StrLength; i++) {\n\t                words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);\n\t            }\n\n\t            return new WordArray.init(words, latin1StrLength);\n\t        }\n\t    };\n\n\t    /**\n\t     * UTF-8 encoding strategy.\n\t     */\n\t    var Utf8 = C_enc.Utf8 = {\n\t        /**\n\t         * Converts a word array to a UTF-8 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-8 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            try {\n\t                return decodeURIComponent(escape(Latin1.stringify(wordArray)));\n\t            } catch (e) {\n\t                throw new Error('Malformed UTF-8 data');\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts a UTF-8 string to a word array.\n\t         *\n\t         * @param {string} utf8Str The UTF-8 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);\n\t         */\n\t        parse: function (utf8Str) {\n\t            return Latin1.parse(unescape(encodeURIComponent(utf8Str)));\n\t        }\n\t    };\n\n\t    /**\n\t     * Abstract buffered block algorithm template.\n\t     *\n\t     * The property blockSize must be implemented in a concrete subtype.\n\t     *\n\t     * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0\n\t     */\n\t    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({\n\t        /**\n\t         * Resets this block algorithm's data buffer to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm.reset();\n\t         */\n\t        reset: function () {\n\t            // Initial values\n\t            this._data = new WordArray.init();\n\t            this._nDataBytes = 0;\n\t        },\n\n\t        /**\n\t         * Adds new data to this block algorithm's buffer.\n\t         *\n\t         * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm._append('data');\n\t         *     bufferedBlockAlgorithm._append(wordArray);\n\t         */\n\t        _append: function (data) {\n\t            // Convert string to WordArray, else assume WordArray already\n\t            if (typeof data == 'string') {\n\t                data = Utf8.parse(data);\n\t            }\n\n\t            // Append\n\t            this._data.concat(data);\n\t            this._nDataBytes += data.sigBytes;\n\t        },\n\n\t        /**\n\t         * Processes available data blocks.\n\t         *\n\t         * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.\n\t         *\n\t         * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.\n\t         *\n\t         * @return {WordArray} The processed data.\n\t         *\n\t         * @example\n\t         *\n\t         *     var processedData = bufferedBlockAlgorithm._process();\n\t         *     var processedData = bufferedBlockAlgorithm._process(!!'flush');\n\t         */\n\t        _process: function (doFlush) {\n\t            var processedWords;\n\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\t            var dataSigBytes = data.sigBytes;\n\t            var blockSize = this.blockSize;\n\t            var blockSizeBytes = blockSize * 4;\n\n\t            // Count blocks ready\n\t            var nBlocksReady = dataSigBytes / blockSizeBytes;\n\t            if (doFlush) {\n\t                // Round up to include partial blocks\n\t                nBlocksReady = Math.ceil(nBlocksReady);\n\t            } else {\n\t                // Round down to include only full blocks,\n\t                // less the number of blocks that must remain in the buffer\n\t                nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\n\t            }\n\n\t            // Count words ready\n\t            var nWordsReady = nBlocksReady * blockSize;\n\n\t            // Count bytes ready\n\t            var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);\n\n\t            // Process blocks\n\t            if (nWordsReady) {\n\t                for (var offset = 0; offset < nWordsReady; offset += blockSize) {\n\t                    // Perform concrete-algorithm logic\n\t                    this._doProcessBlock(dataWords, offset);\n\t                }\n\n\t                // Remove processed words\n\t                processedWords = dataWords.splice(0, nWordsReady);\n\t                data.sigBytes -= nBytesReady;\n\t            }\n\n\t            // Return processed words\n\t            return new WordArray.init(processedWords, nBytesReady);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this object.\n\t         *\n\t         * @return {Object} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = bufferedBlockAlgorithm.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone._data = this._data.clone();\n\n\t            return clone;\n\t        },\n\n\t        _minBufferSize: 0\n\t    });\n\n\t    /**\n\t     * Abstract hasher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)\n\t     */\n\t    var Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({\n\t        /**\n\t         * Configuration options.\n\t         */\n\t        cfg: Base.extend(),\n\n\t        /**\n\t         * Initializes a newly created hasher.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for this hash computation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hasher = CryptoJS.algo.SHA256.create();\n\t         */\n\t        init: function (cfg) {\n\t            // Apply config defaults\n\t            this.cfg = this.cfg.extend(cfg);\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this hasher to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.reset();\n\t         */\n\t        reset: function () {\n\t            // Reset data buffer\n\t            BufferedBlockAlgorithm.reset.call(this);\n\n\t            // Perform concrete-hasher logic\n\t            this._doReset();\n\t        },\n\n\t        /**\n\t         * Updates this hasher with a message.\n\t         *\n\t         * @param {WordArray|string} messageUpdate The message to append.\n\t         *\n\t         * @return {Hasher} This hasher.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.update('message');\n\t         *     hasher.update(wordArray);\n\t         */\n\t        update: function (messageUpdate) {\n\t            // Append\n\t            this._append(messageUpdate);\n\n\t            // Update the hash\n\t            this._process();\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Finalizes the hash computation.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t         *\n\t         * @return {WordArray} The hash.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hash = hasher.finalize();\n\t         *     var hash = hasher.finalize('message');\n\t         *     var hash = hasher.finalize(wordArray);\n\t         */\n\t        finalize: function (messageUpdate) {\n\t            // Final message update\n\t            if (messageUpdate) {\n\t                this._append(messageUpdate);\n\t            }\n\n\t            // Perform concrete-hasher logic\n\t            var hash = this._doFinalize();\n\n\t            return hash;\n\t        },\n\n\t        blockSize: 512/32,\n\n\t        /**\n\t         * Creates a shortcut function to a hasher's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to create a helper for.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHelper: function (hasher) {\n\t            return function (message, cfg) {\n\t                return new hasher.init(cfg).finalize(message);\n\t            };\n\t        },\n\n\t        /**\n\t         * Creates a shortcut function to the HMAC's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to use in this HMAC helper.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHmacHelper: function (hasher) {\n\t            return function (message, key) {\n\t                return new C_algo.HMAC.init(hasher, key).finalize(message);\n\t            };\n\t        }\n\t    });\n\n\t    /**\n\t     * Algorithm namespace.\n\t     */\n\t    var C_algo = C.algo = {};\n\n\t    return C;\n\t}(Math));\n\n\n\treturn CryptoJS;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Initialization and round constants tables\n\t    var H = [];\n\t    var K = [];\n\n\t    // Compute constants\n\t    (function () {\n\t        function isPrime(n) {\n\t            var sqrtN = Math.sqrt(n);\n\t            for (var factor = 2; factor <= sqrtN; factor++) {\n\t                if (!(n % factor)) {\n\t                    return false;\n\t                }\n\t            }\n\n\t            return true;\n\t        }\n\n\t        function getFractionalBits(n) {\n\t            return ((n - (n | 0)) * 0x100000000) | 0;\n\t        }\n\n\t        var n = 2;\n\t        var nPrime = 0;\n\t        while (nPrime < 64) {\n\t            if (isPrime(n)) {\n\t                if (nPrime < 8) {\n\t                    H[nPrime] = getFractionalBits(Math.pow(n, 1 / 2));\n\t                }\n\t                K[nPrime] = getFractionalBits(Math.pow(n, 1 / 3));\n\n\t                nPrime++;\n\t            }\n\n\t            n++;\n\t        }\n\t    }());\n\n\t    // Reusable object\n\t    var W = [];\n\n\t    /**\n\t     * SHA-256 hash algorithm.\n\t     */\n\t    var SHA256 = C_algo.SHA256 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init(H.slice(0));\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var H = this._hash.words;\n\n\t            // Working variables\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\t            var e = H[4];\n\t            var f = H[5];\n\t            var g = H[6];\n\t            var h = H[7];\n\n\t            // Computation\n\t            for (var i = 0; i < 64; i++) {\n\t                if (i < 16) {\n\t                    W[i] = M[offset + i] | 0;\n\t                } else {\n\t                    var gamma0x = W[i - 15];\n\t                    var gamma0  = ((gamma0x << 25) | (gamma0x >>> 7))  ^\n\t                                  ((gamma0x << 14) | (gamma0x >>> 18)) ^\n\t                                   (gamma0x >>> 3);\n\n\t                    var gamma1x = W[i - 2];\n\t                    var gamma1  = ((gamma1x << 15) | (gamma1x >>> 17)) ^\n\t                                  ((gamma1x << 13) | (gamma1x >>> 19)) ^\n\t                                   (gamma1x >>> 10);\n\n\t                    W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];\n\t                }\n\n\t                var ch  = (e & f) ^ (~e & g);\n\t                var maj = (a & b) ^ (a & c) ^ (b & c);\n\n\t                var sigma0 = ((a << 30) | (a >>> 2)) ^ ((a << 19) | (a >>> 13)) ^ ((a << 10) | (a >>> 22));\n\t                var sigma1 = ((e << 26) | (e >>> 6)) ^ ((e << 21) | (e >>> 11)) ^ ((e << 7)  | (e >>> 25));\n\n\t                var t1 = h + sigma1 + ch + K[i] + W[i];\n\t                var t2 = sigma0 + maj;\n\n\t                h = g;\n\t                g = f;\n\t                f = e;\n\t                e = (d + t1) | 0;\n\t                d = c;\n\t                c = b;\n\t                b = a;\n\t                a = (t1 + t2) | 0;\n\t            }\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t            H[4] = (H[4] + e) | 0;\n\t            H[5] = (H[5] + f) | 0;\n\t            H[6] = (H[6] + g) | 0;\n\t            H[7] = (H[7] + h) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Return final computed hash\n\t            return this._hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA256('message');\n\t     *     var hash = CryptoJS.SHA256(wordArray);\n\t     */\n\t    C.SHA256 = Hasher._createHelper(SHA256);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA256(message, key);\n\t     */\n\t    C.HmacSHA256 = Hasher._createHmacHelper(SHA256);\n\t}(Math));\n\n\n\treturn CryptoJS.SHA256;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_enc = C.enc;\n\n\t    /**\n\t     * Base64 encoding strategy.\n\t     */\n\t    var Base64 = C_enc.Base64 = {\n\t        /**\n\t         * Converts a word array to a Base64 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The Base64 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var base64String = CryptoJS.enc.Base64.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\t            var map = this._map;\n\n\t            // Clamp excess bits\n\t            wordArray.clamp();\n\n\t            // Convert\n\t            var base64Chars = [];\n\t            for (var i = 0; i < sigBytes; i += 3) {\n\t                var byte1 = (words[i >>> 2]       >>> (24 - (i % 4) * 8))       & 0xff;\n\t                var byte2 = (words[(i + 1) >>> 2] >>> (24 - ((i + 1) % 4) * 8)) & 0xff;\n\t                var byte3 = (words[(i + 2) >>> 2] >>> (24 - ((i + 2) % 4) * 8)) & 0xff;\n\n\t                var triplet = (byte1 << 16) | (byte2 << 8) | byte3;\n\n\t                for (var j = 0; (j < 4) && (i + j * 0.75 < sigBytes); j++) {\n\t                    base64Chars.push(map.charAt((triplet >>> (6 * (3 - j))) & 0x3f));\n\t                }\n\t            }\n\n\t            // Add padding\n\t            var paddingChar = map.charAt(64);\n\t            if (paddingChar) {\n\t                while (base64Chars.length % 4) {\n\t                    base64Chars.push(paddingChar);\n\t                }\n\t            }\n\n\t            return base64Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Base64 string to a word array.\n\t         *\n\t         * @param {string} base64Str The Base64 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Base64.parse(base64String);\n\t         */\n\t        parse: function (base64Str) {\n\t            // Shortcuts\n\t            var base64StrLength = base64Str.length;\n\t            var map = this._map;\n\t            var reverseMap = this._reverseMap;\n\n\t            if (!reverseMap) {\n\t                    reverseMap = this._reverseMap = [];\n\t                    for (var j = 0; j < map.length; j++) {\n\t                        reverseMap[map.charCodeAt(j)] = j;\n\t                    }\n\t            }\n\n\t            // Ignore padding\n\t            var paddingChar = map.charAt(64);\n\t            if (paddingChar) {\n\t                var paddingIndex = base64Str.indexOf(paddingChar);\n\t                if (paddingIndex !== -1) {\n\t                    base64StrLength = paddingIndex;\n\t                }\n\t            }\n\n\t            // Convert\n\t            return parseLoop(base64Str, base64StrLength, reverseMap);\n\n\t        },\n\n\t        _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='\n\t    };\n\n\t    function parseLoop(base64Str, base64StrLength, reverseMap) {\n\t      var words = [];\n\t      var nBytes = 0;\n\t      for (var i = 0; i < base64StrLength; i++) {\n\t          if (i % 4) {\n\t              var bits1 = reverseMap[base64Str.charCodeAt(i - 1)] << ((i % 4) * 2);\n\t              var bits2 = reverseMap[base64Str.charCodeAt(i)] >>> (6 - (i % 4) * 2);\n\t              var bitsCombined = bits1 | bits2;\n\t              words[nBytes >>> 2] |= bitsCombined << (24 - (nBytes % 4) * 8);\n\t              nBytes++;\n\t          }\n\t      }\n\t      return WordArray.create(words, nBytes);\n\t    }\n\t}());\n\n\n\treturn CryptoJS.enc.Base64;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\treturn CryptoJS.enc.Utf8;\n\n}));","function e(e){this.message=e}e.prototype=new Error,e.prototype.name=\"InvalidCharacterError\";var r=\"undefined\"!=typeof window&&window.atob&&window.atob.bind(window)||function(r){var t=String(r).replace(/=+$/,\"\");if(t.length%4==1)throw new e(\"'atob' failed: The string to be decoded is not correctly encoded.\");for(var n,o,a=0,i=0,c=\"\";o=t.charAt(i++);~o&&(n=a%4?64*n+o:o,a++%4)?c+=String.fromCharCode(255&n>>(-2*a&6)):0)o=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\".indexOf(o);return c};function t(e){var t=e.replace(/-/g,\"+\").replace(/_/g,\"/\");switch(t.length%4){case 0:break;case 2:t+=\"==\";break;case 3:t+=\"=\";break;default:throw\"Illegal base64url string!\"}try{return function(e){return decodeURIComponent(r(e).replace(/(.)/g,(function(e,r){var t=r.charCodeAt(0).toString(16).toUpperCase();return t.length<2&&(t=\"0\"+t),\"%\"+t})))}(t)}catch(e){return r(t)}}function n(e){this.message=e}function o(e,r){if(\"string\"!=typeof e)throw new n(\"Invalid token specified\");var o=!0===(r=r||{}).header?0:1;try{return JSON.parse(t(e.split(\".\")[o]))}catch(e){throw new n(\"Invalid token specified: \"+e.message)}}n.prototype=new Error,n.prototype.name=\"InvalidTokenError\";export default o;export{n as InvalidTokenError};\n//# sourceMappingURL=jwt-decode.esm.js.map\n","// src/utils/CryptoUtils.ts\nimport CryptoJS from \"crypto-js/core.js\";\nimport sha256 from \"crypto-js/sha256.js\";\nimport Base64 from \"crypto-js/enc-base64.js\";\nimport Utf8 from \"crypto-js/enc-utf8.js\";\n\n// src/utils/Logger.ts\nvar nopLogger = {\n  debug: () => void 0,\n  info: () => void 0,\n  warn: () => void 0,\n  error: () => void 0\n};\nvar level;\nvar logger;\nvar Log = /* @__PURE__ */ ((Log2) => {\n  Log2[Log2[\"NONE\"] = 0] = \"NONE\";\n  Log2[Log2[\"ERROR\"] = 1] = \"ERROR\";\n  Log2[Log2[\"WARN\"] = 2] = \"WARN\";\n  Log2[Log2[\"INFO\"] = 3] = \"INFO\";\n  Log2[Log2[\"DEBUG\"] = 4] = \"DEBUG\";\n  return Log2;\n})(Log || {});\n((Log2) => {\n  function reset() {\n    level = 3 /* INFO */;\n    logger = nopLogger;\n  }\n  Log2.reset = reset;\n  function setLevel(value) {\n    if (!(0 /* NONE */ <= value && value <= 4 /* DEBUG */)) {\n      throw new Error(\"Invalid log level\");\n    }\n    level = value;\n  }\n  Log2.setLevel = setLevel;\n  function setLogger(value) {\n    logger = value;\n  }\n  Log2.setLogger = setLogger;\n})(Log || (Log = {}));\nvar Logger = class {\n  constructor(_name) {\n    this._name = _name;\n  }\n  debug(...args) {\n    if (level >= 4 /* DEBUG */) {\n      logger.debug(Logger._format(this._name, this._method), ...args);\n    }\n  }\n  info(...args) {\n    if (level >= 3 /* INFO */) {\n      logger.info(Logger._format(this._name, this._method), ...args);\n    }\n  }\n  warn(...args) {\n    if (level >= 2 /* WARN */) {\n      logger.warn(Logger._format(this._name, this._method), ...args);\n    }\n  }\n  error(...args) {\n    if (level >= 1 /* ERROR */) {\n      logger.error(Logger._format(this._name, this._method), ...args);\n    }\n  }\n  throw(err) {\n    this.error(err);\n    throw err;\n  }\n  create(method) {\n    const methodLogger = Object.create(this);\n    methodLogger._method = method;\n    methodLogger.debug(\"begin\");\n    return methodLogger;\n  }\n  static createStatic(name, staticMethod) {\n    const staticLogger = new Logger(`${name}.${staticMethod}`);\n    staticLogger.debug(\"begin\");\n    return staticLogger;\n  }\n  static _format(name, method) {\n    const prefix = `[${name}]`;\n    return method ? `${prefix} ${method}:` : prefix;\n  }\n  static debug(name, ...args) {\n    if (level >= 4 /* DEBUG */) {\n      logger.debug(Logger._format(name), ...args);\n    }\n  }\n  static info(name, ...args) {\n    if (level >= 3 /* INFO */) {\n      logger.info(Logger._format(name), ...args);\n    }\n  }\n  static warn(name, ...args) {\n    if (level >= 2 /* WARN */) {\n      logger.warn(Logger._format(name), ...args);\n    }\n  }\n  static error(name, ...args) {\n    if (level >= 1 /* ERROR */) {\n      logger.error(Logger._format(name), ...args);\n    }\n  }\n};\nLog.reset();\n\n// src/utils/CryptoUtils.ts\nvar UUID_V4_TEMPLATE = \"10000000-1000-4000-8000-100000000000\";\nvar CryptoUtils = class {\n  static _randomWord() {\n    return CryptoJS.lib.WordArray.random(1).words[0];\n  }\n  static generateUUIDv4() {\n    const uuid = UUID_V4_TEMPLATE.replace(\n      /[018]/g,\n      (c) => (+c ^ CryptoUtils._randomWord() & 15 >> +c / 4).toString(16)\n    );\n    return uuid.replace(/-/g, \"\");\n  }\n  static generateCodeVerifier() {\n    return CryptoUtils.generateUUIDv4() + CryptoUtils.generateUUIDv4() + CryptoUtils.generateUUIDv4();\n  }\n  static generateCodeChallenge(code_verifier) {\n    try {\n      const hashed = sha256(code_verifier);\n      return Base64.stringify(hashed).replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=+$/, \"\");\n    } catch (err) {\n      Logger.error(\"CryptoUtils.generateCodeChallenge\", err);\n      throw err;\n    }\n  }\n  static generateBasicAuth(client_id, client_secret) {\n    const basicAuth = Utf8.parse([client_id, client_secret].join(\":\"));\n    return Base64.stringify(basicAuth);\n  }\n};\n\n// src/utils/Event.ts\nvar Event = class {\n  constructor(_name) {\n    this._name = _name;\n    this._logger = new Logger(`Event('${this._name}')`);\n    this._callbacks = [];\n  }\n  addHandler(cb) {\n    this._callbacks.push(cb);\n    return () => this.removeHandler(cb);\n  }\n  removeHandler(cb) {\n    const idx = this._callbacks.lastIndexOf(cb);\n    if (idx >= 0) {\n      this._callbacks.splice(idx, 1);\n    }\n  }\n  raise(...ev) {\n    this._logger.debug(\"raise:\", ...ev);\n    for (const cb of this._callbacks) {\n      void cb(...ev);\n    }\n  }\n};\n\n// src/utils/JwtUtils.ts\nimport jwt_decode from \"jwt-decode\";\nvar JwtUtils = class {\n  static decode(token) {\n    try {\n      return jwt_decode(token);\n    } catch (err) {\n      Logger.error(\"JwtUtils.decode\", err);\n      throw err;\n    }\n  }\n};\n\n// src/utils/PopupUtils.ts\nvar PopupUtils = class {\n  static center({ ...features }) {\n    var _a, _b, _c;\n    if (features.width == null)\n      features.width = (_a = [800, 720, 600, 480].find((width) => width <= window.outerWidth / 1.618)) != null ? _a : 360;\n    (_b = features.left) != null ? _b : features.left = Math.max(0, Math.round(window.screenX + (window.outerWidth - features.width) / 2));\n    if (features.height != null)\n      (_c = features.top) != null ? _c : features.top = Math.max(0, Math.round(window.screenY + (window.outerHeight - features.height) / 2));\n    return features;\n  }\n  static serialize(features) {\n    return Object.entries(features).filter(([, value]) => value != null).map(([key, value]) => `${key}=${typeof value !== \"boolean\" ? value : value ? \"yes\" : \"no\"}`).join(\",\");\n  }\n};\n\n// src/utils/Timer.ts\nvar Timer = class extends Event {\n  constructor() {\n    super(...arguments);\n    this._logger = new Logger(`Timer('${this._name}')`);\n    this._timerHandle = null;\n    this._expiration = 0;\n    this._callback = () => {\n      const diff = this._expiration - Timer.getEpochTime();\n      this._logger.debug(\"timer completes in\", diff);\n      if (this._expiration <= Timer.getEpochTime()) {\n        this.cancel();\n        super.raise();\n      }\n    };\n  }\n  static getEpochTime() {\n    return Math.floor(Date.now() / 1e3);\n  }\n  init(durationInSeconds) {\n    const logger2 = this._logger.create(\"init\");\n    durationInSeconds = Math.max(Math.floor(durationInSeconds), 1);\n    const expiration = Timer.getEpochTime() + durationInSeconds;\n    if (this.expiration === expiration && this._timerHandle) {\n      logger2.debug(\"skipping since already initialized for expiration at\", this.expiration);\n      return;\n    }\n    this.cancel();\n    logger2.debug(\"using duration\", durationInSeconds);\n    this._expiration = expiration;\n    const timerDurationInSeconds = Math.min(durationInSeconds, 5);\n    this._timerHandle = setInterval(this._callback, timerDurationInSeconds * 1e3);\n  }\n  get expiration() {\n    return this._expiration;\n  }\n  cancel() {\n    this._logger.create(\"cancel\");\n    if (this._timerHandle) {\n      clearInterval(this._timerHandle);\n      this._timerHandle = null;\n    }\n  }\n};\n\n// src/utils/UrlUtils.ts\nvar UrlUtils = class {\n  static readParams(url, responseMode = \"query\") {\n    if (!url)\n      throw new TypeError(\"Invalid URL\");\n    const parsedUrl = new URL(url, window.location.origin);\n    const params = parsedUrl[responseMode === \"fragment\" ? \"hash\" : \"search\"];\n    return new URLSearchParams(params.slice(1));\n  }\n};\n\n// src/errors/ErrorResponse.ts\nvar ErrorResponse = class extends Error {\n  constructor(args, form) {\n    var _a, _b, _c;\n    super(args.error_description || args.error || \"\");\n    this.form = form;\n    this.name = \"ErrorResponse\";\n    if (!args.error) {\n      Logger.error(\"ErrorResponse\", \"No error passed\");\n      throw new Error(\"No error passed\");\n    }\n    this.error = args.error;\n    this.error_description = (_a = args.error_description) != null ? _a : null;\n    this.error_uri = (_b = args.error_uri) != null ? _b : null;\n    this.state = args.userState;\n    this.session_state = (_c = args.session_state) != null ? _c : null;\n  }\n};\n\n// src/errors/ErrorTimeout.ts\nvar ErrorTimeout = class extends Error {\n  constructor(message) {\n    super(message);\n    this.name = \"ErrorTimeout\";\n  }\n};\n\n// src/AccessTokenEvents.ts\nvar AccessTokenEvents = class {\n  constructor(args) {\n    this._logger = new Logger(\"AccessTokenEvents\");\n    this._expiringTimer = new Timer(\"Access token expiring\");\n    this._expiredTimer = new Timer(\"Access token expired\");\n    this._expiringNotificationTimeInSeconds = args.expiringNotificationTimeInSeconds;\n  }\n  load(container) {\n    const logger2 = this._logger.create(\"load\");\n    if (container.access_token && container.expires_in !== void 0) {\n      const duration = container.expires_in;\n      logger2.debug(\"access token present, remaining duration:\", duration);\n      if (duration > 0) {\n        let expiring = duration - this._expiringNotificationTimeInSeconds;\n        if (expiring <= 0) {\n          expiring = 1;\n        }\n        logger2.debug(\"registering expiring timer, raising in\", expiring, \"seconds\");\n        this._expiringTimer.init(expiring);\n      } else {\n        logger2.debug(\"canceling existing expiring timer because we're past expiration.\");\n        this._expiringTimer.cancel();\n      }\n      const expired = duration + 1;\n      logger2.debug(\"registering expired timer, raising in\", expired, \"seconds\");\n      this._expiredTimer.init(expired);\n    } else {\n      this._expiringTimer.cancel();\n      this._expiredTimer.cancel();\n    }\n  }\n  unload() {\n    this._logger.debug(\"unload: canceling existing access token timers\");\n    this._expiringTimer.cancel();\n    this._expiredTimer.cancel();\n  }\n  addAccessTokenExpiring(cb) {\n    return this._expiringTimer.addHandler(cb);\n  }\n  removeAccessTokenExpiring(cb) {\n    this._expiringTimer.removeHandler(cb);\n  }\n  addAccessTokenExpired(cb) {\n    return this._expiredTimer.addHandler(cb);\n  }\n  removeAccessTokenExpired(cb) {\n    this._expiredTimer.removeHandler(cb);\n  }\n};\n\n// src/CheckSessionIFrame.ts\nvar CheckSessionIFrame = class {\n  constructor(_callback, _client_id, url, _intervalInSeconds, _stopOnError) {\n    this._callback = _callback;\n    this._client_id = _client_id;\n    this._intervalInSeconds = _intervalInSeconds;\n    this._stopOnError = _stopOnError;\n    this._logger = new Logger(\"CheckSessionIFrame\");\n    this._timer = null;\n    this._session_state = null;\n    this._message = (e) => {\n      if (e.origin === this._frame_origin && e.source === this._frame.contentWindow) {\n        if (e.data === \"error\") {\n          this._logger.error(\"error message from check session op iframe\");\n          if (this._stopOnError) {\n            this.stop();\n          }\n        } else if (e.data === \"changed\") {\n          this._logger.debug(\"changed message from check session op iframe\");\n          this.stop();\n          void this._callback();\n        } else {\n          this._logger.debug(e.data + \" message from check session op iframe\");\n        }\n      }\n    };\n    const parsedUrl = new URL(url);\n    this._frame_origin = parsedUrl.origin;\n    this._frame = window.document.createElement(\"iframe\");\n    this._frame.style.visibility = \"hidden\";\n    this._frame.style.position = \"fixed\";\n    this._frame.style.left = \"-1000px\";\n    this._frame.style.top = \"0\";\n    this._frame.width = \"0\";\n    this._frame.height = \"0\";\n    this._frame.src = parsedUrl.href;\n  }\n  load() {\n    return new Promise((resolve) => {\n      this._frame.onload = () => {\n        resolve();\n      };\n      window.document.body.appendChild(this._frame);\n      window.addEventListener(\"message\", this._message, false);\n    });\n  }\n  start(session_state) {\n    if (this._session_state === session_state) {\n      return;\n    }\n    this._logger.create(\"start\");\n    this.stop();\n    this._session_state = session_state;\n    const send = () => {\n      if (!this._frame.contentWindow || !this._session_state) {\n        return;\n      }\n      this._frame.contentWindow.postMessage(this._client_id + \" \" + this._session_state, this._frame_origin);\n    };\n    send();\n    this._timer = setInterval(send, this._intervalInSeconds * 1e3);\n  }\n  stop() {\n    this._logger.create(\"stop\");\n    this._session_state = null;\n    if (this._timer) {\n      clearInterval(this._timer);\n      this._timer = null;\n    }\n  }\n};\n\n// src/InMemoryWebStorage.ts\nvar InMemoryWebStorage = class {\n  constructor() {\n    this._logger = new Logger(\"InMemoryWebStorage\");\n    this._data = {};\n  }\n  clear() {\n    this._logger.create(\"clear\");\n    this._data = {};\n  }\n  getItem(key) {\n    this._logger.create(`getItem('${key}')`);\n    return this._data[key];\n  }\n  setItem(key, value) {\n    this._logger.create(`setItem('${key}')`);\n    this._data[key] = value;\n  }\n  removeItem(key) {\n    this._logger.create(`removeItem('${key}')`);\n    delete this._data[key];\n  }\n  get length() {\n    return Object.getOwnPropertyNames(this._data).length;\n  }\n  key(index) {\n    return Object.getOwnPropertyNames(this._data)[index];\n  }\n};\n\n// src/JsonService.ts\nvar JsonService = class {\n  constructor(additionalContentTypes = [], _jwtHandler = null) {\n    this._jwtHandler = _jwtHandler;\n    this._logger = new Logger(\"JsonService\");\n    this._contentTypes = [];\n    this._contentTypes.push(...additionalContentTypes, \"application/json\");\n    if (_jwtHandler) {\n      this._contentTypes.push(\"application/jwt\");\n    }\n  }\n  async fetchWithTimeout(input, init = {}) {\n    const { timeoutInSeconds, ...initFetch } = init;\n    if (!timeoutInSeconds) {\n      return await fetch(input, initFetch);\n    }\n    const controller = new AbortController();\n    const timeoutId = setTimeout(() => controller.abort(), timeoutInSeconds * 1e3);\n    try {\n      const response = await fetch(input, {\n        ...init,\n        signal: controller.signal\n      });\n      return response;\n    } catch (err) {\n      if (err instanceof DOMException && err.name === \"AbortError\") {\n        throw new ErrorTimeout(\"Network timed out\");\n      }\n      throw err;\n    } finally {\n      clearTimeout(timeoutId);\n    }\n  }\n  async getJson(url, {\n    token\n  } = {}) {\n    const logger2 = this._logger.create(\"getJson\");\n    const headers = {\n      \"Accept\": this._contentTypes.join(\", \")\n    };\n    if (token) {\n      logger2.debug(\"token passed, setting Authorization header\");\n      headers[\"Authorization\"] = \"Bearer \" + token;\n    }\n    let response;\n    try {\n      logger2.debug(\"url:\", url);\n      response = await this.fetchWithTimeout(url, { method: \"GET\", headers });\n    } catch (err) {\n      logger2.error(\"Network Error\");\n      throw err;\n    }\n    logger2.debug(\"HTTP response received, status\", response.status);\n    const contentType = response.headers.get(\"Content-Type\");\n    if (contentType && !this._contentTypes.find((item) => contentType.startsWith(item))) {\n      logger2.throw(new Error(`Invalid response Content-Type: ${contentType != null ? contentType : \"undefined\"}, from URL: ${url}`));\n    }\n    if (response.ok && this._jwtHandler && (contentType == null ? void 0 : contentType.startsWith(\"application/jwt\"))) {\n      return await this._jwtHandler(await response.text());\n    }\n    let json;\n    try {\n      json = await response.json();\n    } catch (err) {\n      logger2.error(\"Error parsing JSON response\", err);\n      if (response.ok)\n        throw err;\n      throw new Error(`${response.statusText} (${response.status})`);\n    }\n    if (!response.ok) {\n      logger2.error(\"Error from server:\", json);\n      if (json.error) {\n        throw new ErrorResponse(json);\n      }\n      throw new Error(`${response.statusText} (${response.status}): ${JSON.stringify(json)}`);\n    }\n    return json;\n  }\n  async postForm(url, {\n    body,\n    basicAuth,\n    timeoutInSeconds,\n    initCredentials\n  }) {\n    const logger2 = this._logger.create(\"postForm\");\n    const headers = {\n      \"Accept\": this._contentTypes.join(\", \"),\n      \"Content-Type\": \"application/x-www-form-urlencoded\"\n    };\n    if (basicAuth !== void 0) {\n      headers[\"Authorization\"] = \"Basic \" + basicAuth;\n    }\n    let response;\n    try {\n      logger2.debug(\"url:\", url);\n      response = await this.fetchWithTimeout(url, { method: \"POST\", headers, body, timeoutInSeconds, credentials: initCredentials });\n    } catch (err) {\n      logger2.error(\"Network error\");\n      throw err;\n    }\n    logger2.debug(\"HTTP response received, status\", response.status);\n    const contentType = response.headers.get(\"Content-Type\");\n    if (contentType && !this._contentTypes.find((item) => contentType.startsWith(item))) {\n      throw new Error(`Invalid response Content-Type: ${contentType != null ? contentType : \"undefined\"}, from URL: ${url}`);\n    }\n    const responseText = await response.text();\n    let json = {};\n    if (responseText) {\n      try {\n        json = JSON.parse(responseText);\n      } catch (err) {\n        logger2.error(\"Error parsing JSON response\", err);\n        if (response.ok)\n          throw err;\n        throw new Error(`${response.statusText} (${response.status})`);\n      }\n    }\n    if (!response.ok) {\n      logger2.error(\"Error from server:\", json);\n      if (json.error) {\n        throw new ErrorResponse(json, body);\n      }\n      throw new Error(`${response.statusText} (${response.status}): ${JSON.stringify(json)}`);\n    }\n    return json;\n  }\n};\n\n// src/MetadataService.ts\nvar MetadataService = class {\n  constructor(_settings) {\n    this._settings = _settings;\n    this._logger = new Logger(\"MetadataService\");\n    this._jsonService = new JsonService([\"application/jwk-set+json\"]);\n    this._signingKeys = null;\n    this._metadata = null;\n    this._metadataUrl = this._settings.metadataUrl;\n    if (this._settings.signingKeys) {\n      this._logger.debug(\"using signingKeys from settings\");\n      this._signingKeys = this._settings.signingKeys;\n    }\n    if (this._settings.metadata) {\n      this._logger.debug(\"using metadata from settings\");\n      this._metadata = this._settings.metadata;\n    }\n  }\n  resetSigningKeys() {\n    this._signingKeys = null;\n  }\n  async getMetadata() {\n    const logger2 = this._logger.create(\"getMetadata\");\n    if (this._metadata) {\n      logger2.debug(\"using cached values\");\n      return this._metadata;\n    }\n    if (!this._metadataUrl) {\n      logger2.throw(new Error(\"No authority or metadataUrl configured on settings\"));\n      throw null;\n    }\n    logger2.debug(\"getting metadata from\", this._metadataUrl);\n    const metadata = await this._jsonService.getJson(this._metadataUrl);\n    logger2.debug(\"merging remote JSON with seed metadata\");\n    this._metadata = Object.assign({}, this._settings.metadataSeed, metadata);\n    return this._metadata;\n  }\n  getIssuer() {\n    return this._getMetadataProperty(\"issuer\");\n  }\n  getAuthorizationEndpoint() {\n    return this._getMetadataProperty(\"authorization_endpoint\");\n  }\n  getUserInfoEndpoint() {\n    return this._getMetadataProperty(\"userinfo_endpoint\");\n  }\n  getTokenEndpoint(optional = true) {\n    return this._getMetadataProperty(\"token_endpoint\", optional);\n  }\n  getCheckSessionIframe() {\n    return this._getMetadataProperty(\"check_session_iframe\", true);\n  }\n  getEndSessionEndpoint() {\n    return this._getMetadataProperty(\"end_session_endpoint\", true);\n  }\n  getRevocationEndpoint(optional = true) {\n    return this._getMetadataProperty(\"revocation_endpoint\", optional);\n  }\n  getKeysEndpoint(optional = true) {\n    return this._getMetadataProperty(\"jwks_uri\", optional);\n  }\n  async _getMetadataProperty(name, optional = false) {\n    const logger2 = this._logger.create(`_getMetadataProperty('${name}')`);\n    const metadata = await this.getMetadata();\n    logger2.debug(\"resolved\");\n    if (metadata[name] === void 0) {\n      if (optional === true) {\n        logger2.warn(\"Metadata does not contain optional property\");\n        return void 0;\n      }\n      logger2.throw(new Error(\"Metadata does not contain property \" + name));\n    }\n    return metadata[name];\n  }\n  async getSigningKeys() {\n    const logger2 = this._logger.create(\"getSigningKeys\");\n    if (this._signingKeys) {\n      logger2.debug(\"returning signingKeys from cache\");\n      return this._signingKeys;\n    }\n    const jwks_uri = await this.getKeysEndpoint(false);\n    logger2.debug(\"got jwks_uri\", jwks_uri);\n    const keySet = await this._jsonService.getJson(jwks_uri);\n    logger2.debug(\"got key set\", keySet);\n    if (!Array.isArray(keySet.keys)) {\n      logger2.throw(new Error(\"Missing keys on keyset\"));\n      throw null;\n    }\n    this._signingKeys = keySet.keys;\n    return this._signingKeys;\n  }\n};\n\n// src/WebStorageStateStore.ts\nvar WebStorageStateStore = class {\n  constructor({ prefix = \"oidc.\", store = localStorage } = {}) {\n    this._logger = new Logger(\"WebStorageStateStore\");\n    this._store = store;\n    this._prefix = prefix;\n  }\n  set(key, value) {\n    this._logger.create(`set('${key}')`);\n    key = this._prefix + key;\n    this._store.setItem(key, value);\n    return Promise.resolve();\n  }\n  get(key) {\n    this._logger.create(`get('${key}')`);\n    key = this._prefix + key;\n    const item = this._store.getItem(key);\n    return Promise.resolve(item);\n  }\n  remove(key) {\n    this._logger.create(`remove('${key}')`);\n    key = this._prefix + key;\n    const item = this._store.getItem(key);\n    this._store.removeItem(key);\n    return Promise.resolve(item);\n  }\n  getAllKeys() {\n    this._logger.create(\"getAllKeys\");\n    const keys = [];\n    for (let index = 0; index < this._store.length; index++) {\n      const key = this._store.key(index);\n      if (key && key.indexOf(this._prefix) === 0) {\n        keys.push(key.substr(this._prefix.length));\n      }\n    }\n    return Promise.resolve(keys);\n  }\n};\n\n// src/OidcClientSettings.ts\nvar DefaultResponseType = \"code\";\nvar DefaultScope = \"openid\";\nvar DefaultClientAuthentication = \"client_secret_post\";\nvar DefaultResponseMode = \"query\";\nvar DefaultStaleStateAgeInSeconds = 60 * 15;\nvar DefaultClockSkewInSeconds = 60 * 5;\nvar OidcClientSettingsStore = class {\n  constructor({\n    authority,\n    metadataUrl,\n    metadata,\n    signingKeys,\n    metadataSeed,\n    client_id,\n    client_secret,\n    response_type = DefaultResponseType,\n    scope = DefaultScope,\n    redirect_uri,\n    post_logout_redirect_uri,\n    client_authentication = DefaultClientAuthentication,\n    prompt,\n    display,\n    max_age,\n    ui_locales,\n    acr_values,\n    resource,\n    response_mode = DefaultResponseMode,\n    filterProtocolClaims = true,\n    loadUserInfo = false,\n    staleStateAgeInSeconds = DefaultStaleStateAgeInSeconds,\n    clockSkewInSeconds = DefaultClockSkewInSeconds,\n    userInfoJwtIssuer = \"OP\",\n    mergeClaims = false,\n    stateStore,\n    refreshTokenCredentials = \"same-origin\",\n    extraQueryParams = {},\n    extraTokenParams = {}\n  }) {\n    this.authority = authority;\n    if (metadataUrl) {\n      this.metadataUrl = metadataUrl;\n    } else {\n      this.metadataUrl = authority;\n      if (authority) {\n        if (!this.metadataUrl.endsWith(\"/\")) {\n          this.metadataUrl += \"/\";\n        }\n        this.metadataUrl += \".well-known/openid-configuration\";\n      }\n    }\n    this.metadata = metadata;\n    this.metadataSeed = metadataSeed;\n    this.signingKeys = signingKeys;\n    this.client_id = client_id;\n    this.client_secret = client_secret;\n    this.response_type = response_type;\n    this.scope = scope;\n    this.redirect_uri = redirect_uri;\n    this.post_logout_redirect_uri = post_logout_redirect_uri;\n    this.client_authentication = client_authentication;\n    this.prompt = prompt;\n    this.display = display;\n    this.max_age = max_age;\n    this.ui_locales = ui_locales;\n    this.acr_values = acr_values;\n    this.resource = resource;\n    this.response_mode = response_mode;\n    this.filterProtocolClaims = !!filterProtocolClaims;\n    this.loadUserInfo = !!loadUserInfo;\n    this.staleStateAgeInSeconds = staleStateAgeInSeconds;\n    this.clockSkewInSeconds = clockSkewInSeconds;\n    this.userInfoJwtIssuer = userInfoJwtIssuer;\n    this.mergeClaims = !!mergeClaims;\n    this.refreshTokenCredentials = refreshTokenCredentials;\n    if (stateStore) {\n      this.stateStore = stateStore;\n    } else {\n      const store = typeof window !== \"undefined\" ? window.localStorage : new InMemoryWebStorage();\n      this.stateStore = new WebStorageStateStore({ store });\n    }\n    this.extraQueryParams = extraQueryParams;\n    this.extraTokenParams = extraTokenParams;\n  }\n};\n\n// src/UserInfoService.ts\nvar UserInfoService = class {\n  constructor(_metadataService) {\n    this._metadataService = _metadataService;\n    this._logger = new Logger(\"UserInfoService\");\n    this._getClaimsFromJwt = async (responseText) => {\n      const logger2 = this._logger.create(\"_getClaimsFromJwt\");\n      try {\n        const payload = JwtUtils.decode(responseText);\n        logger2.debug(\"JWT decoding successful\");\n        return payload;\n      } catch (err) {\n        logger2.error(\"Error parsing JWT response\");\n        throw err;\n      }\n    };\n    this._jsonService = new JsonService(void 0, this._getClaimsFromJwt);\n  }\n  async getClaims(token) {\n    const logger2 = this._logger.create(\"getClaims\");\n    if (!token) {\n      this._logger.throw(new Error(\"No token passed\"));\n    }\n    const url = await this._metadataService.getUserInfoEndpoint();\n    logger2.debug(\"got userinfo url\", url);\n    const claims = await this._jsonService.getJson(url, { token });\n    logger2.debug(\"got claims\", claims);\n    return claims;\n  }\n};\n\n// src/TokenClient.ts\nvar TokenClient = class {\n  constructor(_settings, _metadataService) {\n    this._settings = _settings;\n    this._metadataService = _metadataService;\n    this._logger = new Logger(\"TokenClient\");\n    this._jsonService = new JsonService();\n  }\n  async exchangeCode({\n    grant_type = \"authorization_code\",\n    redirect_uri = this._settings.redirect_uri,\n    client_id = this._settings.client_id,\n    client_secret = this._settings.client_secret,\n    ...args\n  }) {\n    const logger2 = this._logger.create(\"exchangeCode\");\n    if (!client_id) {\n      logger2.throw(new Error(\"A client_id is required\"));\n    }\n    if (!redirect_uri) {\n      logger2.throw(new Error(\"A redirect_uri is required\"));\n    }\n    if (!args.code) {\n      logger2.throw(new Error(\"A code is required\"));\n    }\n    if (!args.code_verifier) {\n      logger2.throw(new Error(\"A code_verifier is required\"));\n    }\n    const params = new URLSearchParams({ grant_type, redirect_uri });\n    for (const [key, value] of Object.entries(args)) {\n      if (value != null) {\n        params.set(key, value);\n      }\n    }\n    let basicAuth;\n    switch (this._settings.client_authentication) {\n      case \"client_secret_basic\":\n        if (!client_secret) {\n          logger2.throw(new Error(\"A client_secret is required\"));\n          throw null;\n        }\n        basicAuth = CryptoUtils.generateBasicAuth(client_id, client_secret);\n        break;\n      case \"client_secret_post\":\n        params.append(\"client_id\", client_id);\n        if (client_secret) {\n          params.append(\"client_secret\", client_secret);\n        }\n        break;\n    }\n    const url = await this._metadataService.getTokenEndpoint(false);\n    logger2.debug(\"got token endpoint\");\n    const response = await this._jsonService.postForm(url, { body: params, basicAuth });\n    logger2.debug(\"got response\");\n    return response;\n  }\n  async exchangeRefreshToken({\n    grant_type = \"refresh_token\",\n    client_id = this._settings.client_id,\n    client_secret = this._settings.client_secret,\n    timeoutInSeconds,\n    refreshTokenCredentials,\n    ...args\n  }) {\n    const logger2 = this._logger.create(\"exchangeRefreshToken\");\n    if (!client_id) {\n      logger2.throw(new Error(\"A client_id is required\"));\n    }\n    if (!args.refresh_token) {\n      logger2.throw(new Error(\"A refresh_token is required\"));\n    }\n    const params = new URLSearchParams({ grant_type });\n    for (const [key, value] of Object.entries(args)) {\n      if (value != null) {\n        params.set(key, value);\n      }\n    }\n    let basicAuth;\n    switch (this._settings.client_authentication) {\n      case \"client_secret_basic\":\n        if (!client_secret) {\n          logger2.throw(new Error(\"A client_secret is required\"));\n          throw null;\n        }\n        basicAuth = CryptoUtils.generateBasicAuth(client_id, client_secret);\n        break;\n      case \"client_secret_post\":\n        params.append(\"client_id\", client_id);\n        if (client_secret) {\n          params.append(\"client_secret\", client_secret);\n        }\n        break;\n    }\n    const url = await this._metadataService.getTokenEndpoint(false);\n    logger2.debug(\"got token endpoint\");\n    const response = await this._jsonService.postForm(url, { body: params, basicAuth, timeoutInSeconds, initCredentials: refreshTokenCredentials });\n    logger2.debug(\"got response\");\n    return response;\n  }\n  async revoke(args) {\n    var _a;\n    const logger2 = this._logger.create(\"revoke\");\n    if (!args.token) {\n      logger2.throw(new Error(\"A token is required\"));\n    }\n    const url = await this._metadataService.getRevocationEndpoint(false);\n    logger2.debug(`got revocation endpoint, revoking ${(_a = args.token_type_hint) != null ? _a : \"default token type\"}`);\n    const params = new URLSearchParams();\n    for (const [key, value] of Object.entries(args)) {\n      if (value != null) {\n        params.set(key, value);\n      }\n    }\n    params.set(\"client_id\", this._settings.client_id);\n    if (this._settings.client_secret) {\n      params.set(\"client_secret\", this._settings.client_secret);\n    }\n    await this._jsonService.postForm(url, { body: params });\n    logger2.debug(\"got response\");\n  }\n};\n\n// src/ResponseValidator.ts\nvar ProtocolClaims = [\n  \"iss\",\n  \"aud\",\n  \"exp\",\n  \"nbf\",\n  \"iat\",\n  \"jti\",\n  \"auth_time\",\n  \"nonce\",\n  \"acr\",\n  \"amr\",\n  \"azp\",\n  \"at_hash\"\n];\nvar ResponseValidator = class {\n  constructor(_settings, _metadataService) {\n    this._settings = _settings;\n    this._metadataService = _metadataService;\n    this._logger = new Logger(\"ResponseValidator\");\n    this._userInfoService = new UserInfoService(this._metadataService);\n    this._tokenClient = new TokenClient(this._settings, this._metadataService);\n  }\n  async validateSigninResponse(response, state) {\n    const logger2 = this._logger.create(\"validateSigninResponse\");\n    this._processSigninState(response, state);\n    logger2.debug(\"state processed\");\n    await this._processCode(response, state);\n    logger2.debug(\"code processed\");\n    if (response.isOpenId) {\n      this._validateIdTokenAttributes(response);\n    }\n    logger2.debug(\"tokens validated\");\n    await this._processClaims(response, state == null ? void 0 : state.skipUserInfo, response.isOpenId);\n    logger2.debug(\"claims processed\");\n  }\n  async validateRefreshResponse(response, state) {\n    var _a, _b;\n    const logger2 = this._logger.create(\"validateRefreshResponse\");\n    response.userState = state.data;\n    (_a = response.session_state) != null ? _a : response.session_state = state.session_state;\n    (_b = response.scope) != null ? _b : response.scope = state.scope;\n    const hasIdToken = response.isOpenId && !!response.id_token;\n    if (hasIdToken) {\n      this._validateIdTokenAttributes(response, state.id_token);\n      logger2.debug(\"ID Token validated\");\n    }\n    await this._processClaims(response, false, hasIdToken);\n    logger2.debug(\"claims processed\");\n  }\n  validateSignoutResponse(response, state) {\n    const logger2 = this._logger.create(\"validateSignoutResponse\");\n    if (state.id !== response.state) {\n      logger2.throw(new Error(\"State does not match\"));\n    }\n    logger2.debug(\"state validated\");\n    response.userState = state.data;\n    if (response.error) {\n      logger2.warn(\"Response was error\", response.error);\n      throw new ErrorResponse(response);\n    }\n  }\n  _processSigninState(response, state) {\n    var _a;\n    const logger2 = this._logger.create(\"_processSigninState\");\n    if (state.id !== response.state) {\n      logger2.throw(new Error(\"State does not match\"));\n    }\n    if (!state.client_id) {\n      logger2.throw(new Error(\"No client_id on state\"));\n    }\n    if (!state.authority) {\n      logger2.throw(new Error(\"No authority on state\"));\n    }\n    if (this._settings.authority !== state.authority) {\n      logger2.throw(new Error(\"authority mismatch on settings vs. signin state\"));\n    }\n    if (this._settings.client_id && this._settings.client_id !== state.client_id) {\n      logger2.throw(new Error(\"client_id mismatch on settings vs. signin state\"));\n    }\n    logger2.debug(\"state validated\");\n    response.userState = state.data;\n    (_a = response.scope) != null ? _a : response.scope = state.scope;\n    if (response.error) {\n      logger2.warn(\"Response was error\", response.error);\n      throw new ErrorResponse(response);\n    }\n    if (state.code_verifier && !response.code) {\n      logger2.throw(new Error(\"Expected code in response\"));\n    }\n    if (!state.code_verifier && response.code) {\n      logger2.throw(new Error(\"Unexpected code in response\"));\n    }\n  }\n  async _processClaims(response, skipUserInfo = false, validateSub = true) {\n    const logger2 = this._logger.create(\"_processClaims\");\n    response.profile = this._filterProtocolClaims(response.profile);\n    if (skipUserInfo || !this._settings.loadUserInfo || !response.access_token) {\n      logger2.debug(\"not loading user info\");\n      return;\n    }\n    logger2.debug(\"loading user info\");\n    const claims = await this._userInfoService.getClaims(response.access_token);\n    logger2.debug(\"user info claims received from user info endpoint\");\n    if (validateSub && claims.sub !== response.profile.sub) {\n      logger2.throw(new Error(\"subject from UserInfo response does not match subject in ID Token\"));\n    }\n    response.profile = this._mergeClaims(response.profile, this._filterProtocolClaims(claims));\n    logger2.debug(\"user info claims received, updated profile:\", response.profile);\n  }\n  _mergeClaims(claims1, claims2) {\n    const result = { ...claims1 };\n    for (const [claim, values] of Object.entries(claims2)) {\n      for (const value of Array.isArray(values) ? values : [values]) {\n        const previousValue = result[claim];\n        if (!previousValue) {\n          result[claim] = value;\n        } else if (Array.isArray(previousValue)) {\n          if (!previousValue.includes(value)) {\n            previousValue.push(value);\n          }\n        } else if (result[claim] !== value) {\n          if (typeof value === \"object\" && this._settings.mergeClaims) {\n            result[claim] = this._mergeClaims(previousValue, value);\n          } else {\n            result[claim] = [previousValue, value];\n          }\n        }\n      }\n    }\n    return result;\n  }\n  _filterProtocolClaims(claims) {\n    const result = { ...claims };\n    if (this._settings.filterProtocolClaims) {\n      for (const type of ProtocolClaims) {\n        delete result[type];\n      }\n    }\n    return result;\n  }\n  async _processCode(response, state) {\n    const logger2 = this._logger.create(\"_processCode\");\n    if (response.code) {\n      logger2.debug(\"Validating code\");\n      const tokenResponse = await this._tokenClient.exchangeCode({\n        client_id: state.client_id,\n        client_secret: state.client_secret,\n        code: response.code,\n        redirect_uri: state.redirect_uri,\n        code_verifier: state.code_verifier,\n        ...state.extraTokenParams\n      });\n      Object.assign(response, tokenResponse);\n    } else {\n      logger2.debug(\"No code to process\");\n    }\n  }\n  _validateIdTokenAttributes(response, currentToken) {\n    var _a;\n    const logger2 = this._logger.create(\"_validateIdTokenAttributes\");\n    logger2.debug(\"decoding ID Token JWT\");\n    const profile = JwtUtils.decode((_a = response.id_token) != null ? _a : \"\");\n    if (!profile.sub) {\n      logger2.throw(new Error(\"ID Token is missing a subject claim\"));\n    }\n    if (currentToken) {\n      const current = JwtUtils.decode(currentToken);\n      if (current.sub !== profile.sub) {\n        logger2.throw(new Error(\"sub in id_token does not match current sub\"));\n      }\n      if (current.auth_time && current.auth_time !== profile.auth_time) {\n        logger2.throw(new Error(\"auth_time in id_token does not match original auth_time\"));\n      }\n      if (current.azp && current.azp !== profile.azp) {\n        logger2.throw(new Error(\"azp in id_token does not match original azp\"));\n      }\n      if (!current.azp && profile.azp) {\n        logger2.throw(new Error(\"azp not in id_token, but present in original id_token\"));\n      }\n    }\n    response.profile = profile;\n  }\n};\n\n// src/State.ts\nvar State = class {\n  constructor(args) {\n    this.id = args.id || CryptoUtils.generateUUIDv4();\n    this.data = args.data;\n    if (args.created && args.created > 0) {\n      this.created = args.created;\n    } else {\n      this.created = Timer.getEpochTime();\n    }\n    this.request_type = args.request_type;\n  }\n  toStorageString() {\n    new Logger(\"State\").create(\"toStorageString\");\n    return JSON.stringify({\n      id: this.id,\n      data: this.data,\n      created: this.created,\n      request_type: this.request_type\n    });\n  }\n  static fromStorageString(storageString) {\n    Logger.createStatic(\"State\", \"fromStorageString\");\n    return new State(JSON.parse(storageString));\n  }\n  static async clearStaleState(storage, age) {\n    const logger2 = Logger.createStatic(\"State\", \"clearStaleState\");\n    const cutoff = Timer.getEpochTime() - age;\n    const keys = await storage.getAllKeys();\n    logger2.debug(\"got keys\", keys);\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      const item = await storage.get(key);\n      let remove = false;\n      if (item) {\n        try {\n          const state = State.fromStorageString(item);\n          logger2.debug(\"got item from key:\", key, state.created);\n          if (state.created <= cutoff) {\n            remove = true;\n          }\n        } catch (err) {\n          logger2.error(\"Error parsing state for key:\", key, err);\n          remove = true;\n        }\n      } else {\n        logger2.debug(\"no item in storage for key:\", key);\n        remove = true;\n      }\n      if (remove) {\n        logger2.debug(\"removed item for key:\", key);\n        void storage.remove(key);\n      }\n    }\n  }\n};\n\n// src/SigninState.ts\nvar SigninState = class extends State {\n  constructor(args) {\n    super(args);\n    if (args.code_verifier === true) {\n      this.code_verifier = CryptoUtils.generateCodeVerifier();\n    } else if (args.code_verifier) {\n      this.code_verifier = args.code_verifier;\n    }\n    if (this.code_verifier) {\n      this.code_challenge = CryptoUtils.generateCodeChallenge(this.code_verifier);\n    }\n    this.authority = args.authority;\n    this.client_id = args.client_id;\n    this.redirect_uri = args.redirect_uri;\n    this.scope = args.scope;\n    this.client_secret = args.client_secret;\n    this.extraTokenParams = args.extraTokenParams;\n    this.response_mode = args.response_mode;\n    this.skipUserInfo = args.skipUserInfo;\n  }\n  toStorageString() {\n    new Logger(\"SigninState\").create(\"toStorageString\");\n    return JSON.stringify({\n      id: this.id,\n      data: this.data,\n      created: this.created,\n      request_type: this.request_type,\n      code_verifier: this.code_verifier,\n      authority: this.authority,\n      client_id: this.client_id,\n      redirect_uri: this.redirect_uri,\n      scope: this.scope,\n      client_secret: this.client_secret,\n      extraTokenParams: this.extraTokenParams,\n      response_mode: this.response_mode,\n      skipUserInfo: this.skipUserInfo\n    });\n  }\n  static fromStorageString(storageString) {\n    Logger.createStatic(\"SigninState\", \"fromStorageString\");\n    const data = JSON.parse(storageString);\n    return new SigninState(data);\n  }\n};\n\n// src/SigninRequest.ts\nvar SigninRequest = class {\n  constructor({\n    url,\n    authority,\n    client_id,\n    redirect_uri,\n    response_type,\n    scope,\n    state_data,\n    response_mode,\n    request_type,\n    client_secret,\n    nonce,\n    skipUserInfo,\n    extraQueryParams,\n    extraTokenParams,\n    ...optionalParams\n  }) {\n    this._logger = new Logger(\"SigninRequest\");\n    if (!url) {\n      this._logger.error(\"ctor: No url passed\");\n      throw new Error(\"url\");\n    }\n    if (!client_id) {\n      this._logger.error(\"ctor: No client_id passed\");\n      throw new Error(\"client_id\");\n    }\n    if (!redirect_uri) {\n      this._logger.error(\"ctor: No redirect_uri passed\");\n      throw new Error(\"redirect_uri\");\n    }\n    if (!response_type) {\n      this._logger.error(\"ctor: No response_type passed\");\n      throw new Error(\"response_type\");\n    }\n    if (!scope) {\n      this._logger.error(\"ctor: No scope passed\");\n      throw new Error(\"scope\");\n    }\n    if (!authority) {\n      this._logger.error(\"ctor: No authority passed\");\n      throw new Error(\"authority\");\n    }\n    this.state = new SigninState({\n      data: state_data,\n      request_type,\n      code_verifier: true,\n      client_id,\n      authority,\n      redirect_uri,\n      response_mode,\n      client_secret,\n      scope,\n      extraTokenParams,\n      skipUserInfo\n    });\n    const parsedUrl = new URL(url);\n    parsedUrl.searchParams.append(\"client_id\", client_id);\n    parsedUrl.searchParams.append(\"redirect_uri\", redirect_uri);\n    parsedUrl.searchParams.append(\"response_type\", response_type);\n    parsedUrl.searchParams.append(\"scope\", scope);\n    if (nonce) {\n      parsedUrl.searchParams.append(\"nonce\", nonce);\n    }\n    parsedUrl.searchParams.append(\"state\", this.state.id);\n    if (this.state.code_challenge) {\n      parsedUrl.searchParams.append(\"code_challenge\", this.state.code_challenge);\n      parsedUrl.searchParams.append(\"code_challenge_method\", \"S256\");\n    }\n    for (const [key, value] of Object.entries({ response_mode, ...optionalParams, ...extraQueryParams })) {\n      if (value != null) {\n        parsedUrl.searchParams.append(key, value.toString());\n      }\n    }\n    this.url = parsedUrl.href;\n  }\n};\n\n// src/SigninResponse.ts\nvar OidcScope = \"openid\";\nvar SigninResponse = class {\n  constructor(params) {\n    this.access_token = \"\";\n    this.token_type = \"\";\n    this.profile = {};\n    this.state = params.get(\"state\");\n    this.session_state = params.get(\"session_state\");\n    this.error = params.get(\"error\");\n    this.error_description = params.get(\"error_description\");\n    this.error_uri = params.get(\"error_uri\");\n    this.code = params.get(\"code\");\n  }\n  get expires_in() {\n    if (this.expires_at === void 0) {\n      return void 0;\n    }\n    return this.expires_at - Timer.getEpochTime();\n  }\n  set expires_in(value) {\n    if (typeof value === \"string\")\n      value = Number(value);\n    if (value !== void 0 && value >= 0) {\n      this.expires_at = Math.floor(value) + Timer.getEpochTime();\n    }\n  }\n  get isOpenId() {\n    var _a;\n    return ((_a = this.scope) == null ? void 0 : _a.split(\" \").includes(OidcScope)) || !!this.id_token;\n  }\n};\n\n// src/SignoutRequest.ts\nvar SignoutRequest = class {\n  constructor({\n    url,\n    state_data,\n    id_token_hint,\n    post_logout_redirect_uri,\n    extraQueryParams,\n    request_type\n  }) {\n    this._logger = new Logger(\"SignoutRequest\");\n    if (!url) {\n      this._logger.error(\"ctor: No url passed\");\n      throw new Error(\"url\");\n    }\n    const parsedUrl = new URL(url);\n    if (id_token_hint) {\n      parsedUrl.searchParams.append(\"id_token_hint\", id_token_hint);\n    }\n    if (post_logout_redirect_uri) {\n      parsedUrl.searchParams.append(\"post_logout_redirect_uri\", post_logout_redirect_uri);\n      if (state_data) {\n        this.state = new State({ data: state_data, request_type });\n        parsedUrl.searchParams.append(\"state\", this.state.id);\n      }\n    }\n    for (const [key, value] of Object.entries({ ...extraQueryParams })) {\n      if (value != null) {\n        parsedUrl.searchParams.append(key, value.toString());\n      }\n    }\n    this.url = parsedUrl.href;\n  }\n};\n\n// src/SignoutResponse.ts\nvar SignoutResponse = class {\n  constructor(params) {\n    this.state = params.get(\"state\");\n    this.error = params.get(\"error\");\n    this.error_description = params.get(\"error_description\");\n    this.error_uri = params.get(\"error_uri\");\n  }\n};\n\n// src/OidcClient.ts\nvar OidcClient = class {\n  constructor(settings) {\n    this._logger = new Logger(\"OidcClient\");\n    this.settings = new OidcClientSettingsStore(settings);\n    this.metadataService = new MetadataService(this.settings);\n    this._validator = new ResponseValidator(this.settings, this.metadataService);\n    this._tokenClient = new TokenClient(this.settings, this.metadataService);\n  }\n  async createSigninRequest({\n    state,\n    request,\n    request_uri,\n    request_type,\n    id_token_hint,\n    login_hint,\n    skipUserInfo,\n    nonce,\n    response_type = this.settings.response_type,\n    scope = this.settings.scope,\n    redirect_uri = this.settings.redirect_uri,\n    prompt = this.settings.prompt,\n    display = this.settings.display,\n    max_age = this.settings.max_age,\n    ui_locales = this.settings.ui_locales,\n    acr_values = this.settings.acr_values,\n    resource = this.settings.resource,\n    response_mode = this.settings.response_mode,\n    extraQueryParams = this.settings.extraQueryParams,\n    extraTokenParams = this.settings.extraTokenParams\n  }) {\n    const logger2 = this._logger.create(\"createSigninRequest\");\n    if (response_type !== \"code\") {\n      throw new Error(\"Only the Authorization Code flow (with PKCE) is supported\");\n    }\n    const url = await this.metadataService.getAuthorizationEndpoint();\n    logger2.debug(\"Received authorization endpoint\", url);\n    const signinRequest = new SigninRequest({\n      url,\n      authority: this.settings.authority,\n      client_id: this.settings.client_id,\n      redirect_uri,\n      response_type,\n      scope,\n      state_data: state,\n      prompt,\n      display,\n      max_age,\n      ui_locales,\n      id_token_hint,\n      login_hint,\n      acr_values,\n      resource,\n      request,\n      request_uri,\n      extraQueryParams,\n      extraTokenParams,\n      request_type,\n      response_mode,\n      client_secret: this.settings.client_secret,\n      skipUserInfo,\n      nonce\n    });\n    await this.clearStaleState();\n    const signinState = signinRequest.state;\n    await this.settings.stateStore.set(signinState.id, signinState.toStorageString());\n    return signinRequest;\n  }\n  async readSigninResponseState(url, removeState = false) {\n    const logger2 = this._logger.create(\"readSigninResponseState\");\n    const response = new SigninResponse(UrlUtils.readParams(url, this.settings.response_mode));\n    if (!response.state) {\n      logger2.throw(new Error(\"No state in response\"));\n      throw null;\n    }\n    const storedStateString = await this.settings.stateStore[removeState ? \"remove\" : \"get\"](response.state);\n    if (!storedStateString) {\n      logger2.throw(new Error(\"No matching state found in storage\"));\n      throw null;\n    }\n    const state = SigninState.fromStorageString(storedStateString);\n    return { state, response };\n  }\n  async processSigninResponse(url) {\n    const logger2 = this._logger.create(\"processSigninResponse\");\n    const { state, response } = await this.readSigninResponseState(url, true);\n    logger2.debug(\"received state from storage; validating response\");\n    await this._validator.validateSigninResponse(response, state);\n    return response;\n  }\n  async useRefreshToken({\n    state,\n    timeoutInSeconds\n  }) {\n    const logger2 = this._logger.create(\"useRefreshToken\");\n    const result = await this._tokenClient.exchangeRefreshToken({\n      refresh_token: state.refresh_token,\n      scope: state.scope,\n      timeoutInSeconds,\n      refreshTokenCredentials: this.settings.refreshTokenCredentials\n    });\n    const response = new SigninResponse(new URLSearchParams());\n    Object.assign(response, result);\n    logger2.debug(\"validating response\", response);\n    await this._validator.validateRefreshResponse(response, state);\n    return response;\n  }\n  async createSignoutRequest({\n    state,\n    id_token_hint,\n    request_type,\n    post_logout_redirect_uri = this.settings.post_logout_redirect_uri,\n    extraQueryParams = this.settings.extraQueryParams\n  } = {}) {\n    const logger2 = this._logger.create(\"createSignoutRequest\");\n    const url = await this.metadataService.getEndSessionEndpoint();\n    if (!url) {\n      logger2.throw(new Error(\"No end session endpoint\"));\n      throw null;\n    }\n    logger2.debug(\"Received end session endpoint\", url);\n    const request = new SignoutRequest({\n      url,\n      id_token_hint,\n      post_logout_redirect_uri,\n      state_data: state,\n      extraQueryParams,\n      request_type\n    });\n    await this.clearStaleState();\n    const signoutState = request.state;\n    if (signoutState) {\n      logger2.debug(\"Signout request has state to persist\");\n      await this.settings.stateStore.set(signoutState.id, signoutState.toStorageString());\n    }\n    return request;\n  }\n  async readSignoutResponseState(url, removeState = false) {\n    const logger2 = this._logger.create(\"readSignoutResponseState\");\n    const response = new SignoutResponse(UrlUtils.readParams(url, this.settings.response_mode));\n    if (!response.state) {\n      logger2.debug(\"No state in response\");\n      if (response.error) {\n        logger2.warn(\"Response was error:\", response.error);\n        throw new ErrorResponse(response);\n      }\n      return { state: void 0, response };\n    }\n    const storedStateString = await this.settings.stateStore[removeState ? \"remove\" : \"get\"](response.state);\n    if (!storedStateString) {\n      logger2.throw(new Error(\"No matching state found in storage\"));\n      throw null;\n    }\n    const state = State.fromStorageString(storedStateString);\n    return { state, response };\n  }\n  async processSignoutResponse(url) {\n    const logger2 = this._logger.create(\"processSignoutResponse\");\n    const { state, response } = await this.readSignoutResponseState(url, true);\n    if (state) {\n      logger2.debug(\"Received state from storage; validating response\");\n      this._validator.validateSignoutResponse(response, state);\n    } else {\n      logger2.debug(\"No state from storage; skipping response validation\");\n    }\n    return response;\n  }\n  clearStaleState() {\n    this._logger.create(\"clearStaleState\");\n    return State.clearStaleState(this.settings.stateStore, this.settings.staleStateAgeInSeconds);\n  }\n  async revokeToken(token, type) {\n    this._logger.create(\"revokeToken\");\n    return await this._tokenClient.revoke({\n      token,\n      token_type_hint: type\n    });\n  }\n};\n\n// src/SessionMonitor.ts\nvar SessionMonitor = class {\n  constructor(_userManager) {\n    this._userManager = _userManager;\n    this._logger = new Logger(\"SessionMonitor\");\n    this._start = async (user) => {\n      const session_state = user.session_state;\n      if (!session_state) {\n        return;\n      }\n      const logger2 = this._logger.create(\"_start\");\n      if (user.profile) {\n        this._sub = user.profile.sub;\n        this._sid = user.profile.sid;\n        logger2.debug(\"session_state\", session_state, \", sub\", this._sub);\n      } else {\n        this._sub = void 0;\n        this._sid = void 0;\n        logger2.debug(\"session_state\", session_state, \", anonymous user\");\n      }\n      if (this._checkSessionIFrame) {\n        this._checkSessionIFrame.start(session_state);\n        return;\n      }\n      try {\n        const url = await this._userManager.metadataService.getCheckSessionIframe();\n        if (url) {\n          logger2.debug(\"initializing check session iframe\");\n          const client_id = this._userManager.settings.client_id;\n          const intervalInSeconds = this._userManager.settings.checkSessionIntervalInSeconds;\n          const stopOnError = this._userManager.settings.stopCheckSessionOnError;\n          const checkSessionIFrame = new CheckSessionIFrame(this._callback, client_id, url, intervalInSeconds, stopOnError);\n          await checkSessionIFrame.load();\n          this._checkSessionIFrame = checkSessionIFrame;\n          checkSessionIFrame.start(session_state);\n        } else {\n          logger2.warn(\"no check session iframe found in the metadata\");\n        }\n      } catch (err) {\n        logger2.error(\"Error from getCheckSessionIframe:\", err instanceof Error ? err.message : err);\n      }\n    };\n    this._stop = () => {\n      const logger2 = this._logger.create(\"_stop\");\n      this._sub = void 0;\n      this._sid = void 0;\n      if (this._checkSessionIFrame) {\n        this._checkSessionIFrame.stop();\n      }\n      if (this._userManager.settings.monitorAnonymousSession) {\n        const timerHandle = setInterval(async () => {\n          clearInterval(timerHandle);\n          try {\n            const session = await this._userManager.querySessionStatus();\n            if (session) {\n              const tmpUser = {\n                session_state: session.session_state,\n                profile: session.sub && session.sid ? {\n                  sub: session.sub,\n                  sid: session.sid\n                } : null\n              };\n              void this._start(tmpUser);\n            }\n          } catch (err) {\n            logger2.error(\"error from querySessionStatus\", err instanceof Error ? err.message : err);\n          }\n        }, 1e3);\n      }\n    };\n    this._callback = async () => {\n      const logger2 = this._logger.create(\"_callback\");\n      try {\n        const session = await this._userManager.querySessionStatus();\n        let raiseEvent = true;\n        if (session && this._checkSessionIFrame) {\n          if (session.sub === this._sub) {\n            raiseEvent = false;\n            this._checkSessionIFrame.start(session.session_state);\n            if (session.sid === this._sid) {\n              logger2.debug(\"same sub still logged in at OP, restarting check session iframe; session_state\", session.session_state);\n            } else {\n              logger2.debug(\"same sub still logged in at OP, session state has changed, restarting check session iframe; session_state\", session.session_state);\n              this._userManager.events._raiseUserSessionChanged();\n            }\n          } else {\n            logger2.debug(\"different subject signed into OP\", session.sub);\n          }\n        } else {\n          logger2.debug(\"subject no longer signed into OP\");\n        }\n        if (raiseEvent) {\n          if (this._sub) {\n            this._userManager.events._raiseUserSignedOut();\n          } else {\n            this._userManager.events._raiseUserSignedIn();\n          }\n        } else {\n          logger2.debug(\"no change in session detected, no event to raise\");\n        }\n      } catch (err) {\n        if (this._sub) {\n          logger2.debug(\"Error calling queryCurrentSigninSession; raising signed out event\", err);\n          this._userManager.events._raiseUserSignedOut();\n        }\n      }\n    };\n    if (!_userManager) {\n      this._logger.throw(new Error(\"No user manager passed\"));\n    }\n    this._userManager.events.addUserLoaded(this._start);\n    this._userManager.events.addUserUnloaded(this._stop);\n    this._init().catch((err) => {\n      this._logger.error(err);\n    });\n  }\n  async _init() {\n    this._logger.create(\"_init\");\n    const user = await this._userManager.getUser();\n    if (user) {\n      void this._start(user);\n    } else if (this._userManager.settings.monitorAnonymousSession) {\n      const session = await this._userManager.querySessionStatus();\n      if (session) {\n        const tmpUser = {\n          session_state: session.session_state,\n          profile: session.sub && session.sid ? {\n            sub: session.sub,\n            sid: session.sid\n          } : null\n        };\n        void this._start(tmpUser);\n      }\n    }\n  }\n};\n\n// src/User.ts\nvar User = class {\n  constructor(args) {\n    var _a;\n    this.id_token = args.id_token;\n    this.session_state = (_a = args.session_state) != null ? _a : null;\n    this.access_token = args.access_token;\n    this.refresh_token = args.refresh_token;\n    this.token_type = args.token_type;\n    this.scope = args.scope;\n    this.profile = args.profile;\n    this.expires_at = args.expires_at;\n    this.state = args.userState;\n  }\n  get expires_in() {\n    if (this.expires_at === void 0) {\n      return void 0;\n    }\n    return this.expires_at - Timer.getEpochTime();\n  }\n  set expires_in(value) {\n    if (value !== void 0) {\n      this.expires_at = Math.floor(value) + Timer.getEpochTime();\n    }\n  }\n  get expired() {\n    const expires_in = this.expires_in;\n    if (expires_in === void 0) {\n      return void 0;\n    }\n    return expires_in <= 0;\n  }\n  get scopes() {\n    var _a, _b;\n    return (_b = (_a = this.scope) == null ? void 0 : _a.split(\" \")) != null ? _b : [];\n  }\n  toStorageString() {\n    new Logger(\"User\").create(\"toStorageString\");\n    return JSON.stringify({\n      id_token: this.id_token,\n      session_state: this.session_state,\n      access_token: this.access_token,\n      refresh_token: this.refresh_token,\n      token_type: this.token_type,\n      scope: this.scope,\n      profile: this.profile,\n      expires_at: this.expires_at\n    });\n  }\n  static fromStorageString(storageString) {\n    Logger.createStatic(\"User\", \"fromStorageString\");\n    return new User(JSON.parse(storageString));\n  }\n};\n\n// src/navigators/AbstractChildWindow.ts\nvar messageSource = \"oidc-client\";\nvar AbstractChildWindow = class {\n  constructor() {\n    this._abort = new Event(\"Window navigation aborted\");\n    this._disposeHandlers = /* @__PURE__ */ new Set();\n    this._window = null;\n  }\n  async navigate(params) {\n    const logger2 = this._logger.create(\"navigate\");\n    if (!this._window) {\n      throw new Error(\"Attempted to navigate on a disposed window\");\n    }\n    logger2.debug(\"setting URL in window\");\n    this._window.location.replace(params.url);\n    const { url, keepOpen } = await new Promise((resolve, reject) => {\n      const listener = (e) => {\n        var _a;\n        const data = e.data;\n        const origin = (_a = params.scriptOrigin) != null ? _a : window.location.origin;\n        if (e.origin !== origin || (data == null ? void 0 : data.source) !== messageSource) {\n          return;\n        }\n        try {\n          const state = UrlUtils.readParams(data.url, params.response_mode).get(\"state\");\n          if (!state) {\n            logger2.warn(\"no state found in response url\");\n          }\n          if (e.source !== this._window && state !== params.state) {\n            return;\n          }\n        } catch (err) {\n          this._dispose();\n          reject(new Error(\"Invalid response from window\"));\n        }\n        resolve(data);\n      };\n      window.addEventListener(\"message\", listener, false);\n      this._disposeHandlers.add(() => window.removeEventListener(\"message\", listener, false));\n      this._disposeHandlers.add(this._abort.addHandler((reason) => {\n        this._dispose();\n        reject(reason);\n      }));\n    });\n    logger2.debug(\"got response from window\");\n    this._dispose();\n    if (!keepOpen) {\n      this.close();\n    }\n    return { url };\n  }\n  _dispose() {\n    this._logger.create(\"_dispose\");\n    for (const dispose of this._disposeHandlers) {\n      dispose();\n    }\n    this._disposeHandlers.clear();\n  }\n  static _notifyParent(parent, url, keepOpen = false, targetOrigin = window.location.origin) {\n    parent.postMessage({\n      source: messageSource,\n      url,\n      keepOpen\n    }, targetOrigin);\n  }\n};\n\n// src/UserManagerSettings.ts\nvar DefaultPopupWindowFeatures = {\n  location: false,\n  toolbar: false,\n  height: 640\n};\nvar DefaultPopupTarget = \"_blank\";\nvar DefaultAccessTokenExpiringNotificationTimeInSeconds = 60;\nvar DefaultCheckSessionIntervalInSeconds = 2;\nvar DefaultSilentRequestTimeoutInSeconds = 10;\nvar UserManagerSettingsStore = class extends OidcClientSettingsStore {\n  constructor(args) {\n    const {\n      popup_redirect_uri = args.redirect_uri,\n      popup_post_logout_redirect_uri = args.post_logout_redirect_uri,\n      popupWindowFeatures = DefaultPopupWindowFeatures,\n      popupWindowTarget = DefaultPopupTarget,\n      redirectMethod = \"assign\",\n      redirectTarget = \"self\",\n      iframeNotifyParentOrigin = args.iframeNotifyParentOrigin,\n      iframeScriptOrigin = args.iframeScriptOrigin,\n      silent_redirect_uri = args.redirect_uri,\n      silentRequestTimeoutInSeconds = DefaultSilentRequestTimeoutInSeconds,\n      automaticSilentRenew = true,\n      validateSubOnSilentRenew = true,\n      includeIdTokenInSilentRenew = false,\n      monitorSession = false,\n      monitorAnonymousSession = false,\n      checkSessionIntervalInSeconds = DefaultCheckSessionIntervalInSeconds,\n      query_status_response_type = \"code\",\n      stopCheckSessionOnError = true,\n      revokeTokenTypes = [\"access_token\", \"refresh_token\"],\n      revokeTokensOnSignout = false,\n      accessTokenExpiringNotificationTimeInSeconds = DefaultAccessTokenExpiringNotificationTimeInSeconds,\n      userStore\n    } = args;\n    super(args);\n    this.popup_redirect_uri = popup_redirect_uri;\n    this.popup_post_logout_redirect_uri = popup_post_logout_redirect_uri;\n    this.popupWindowFeatures = popupWindowFeatures;\n    this.popupWindowTarget = popupWindowTarget;\n    this.redirectMethod = redirectMethod;\n    this.redirectTarget = redirectTarget;\n    this.iframeNotifyParentOrigin = iframeNotifyParentOrigin;\n    this.iframeScriptOrigin = iframeScriptOrigin;\n    this.silent_redirect_uri = silent_redirect_uri;\n    this.silentRequestTimeoutInSeconds = silentRequestTimeoutInSeconds;\n    this.automaticSilentRenew = automaticSilentRenew;\n    this.validateSubOnSilentRenew = validateSubOnSilentRenew;\n    this.includeIdTokenInSilentRenew = includeIdTokenInSilentRenew;\n    this.monitorSession = monitorSession;\n    this.monitorAnonymousSession = monitorAnonymousSession;\n    this.checkSessionIntervalInSeconds = checkSessionIntervalInSeconds;\n    this.stopCheckSessionOnError = stopCheckSessionOnError;\n    this.query_status_response_type = query_status_response_type;\n    this.revokeTokenTypes = revokeTokenTypes;\n    this.revokeTokensOnSignout = revokeTokensOnSignout;\n    this.accessTokenExpiringNotificationTimeInSeconds = accessTokenExpiringNotificationTimeInSeconds;\n    if (userStore) {\n      this.userStore = userStore;\n    } else {\n      const store = typeof window !== \"undefined\" ? window.sessionStorage : new InMemoryWebStorage();\n      this.userStore = new WebStorageStateStore({ store });\n    }\n  }\n};\n\n// src/navigators/IFrameWindow.ts\nvar IFrameWindow = class extends AbstractChildWindow {\n  constructor({\n    silentRequestTimeoutInSeconds = DefaultSilentRequestTimeoutInSeconds\n  }) {\n    super();\n    this._logger = new Logger(\"IFrameWindow\");\n    this._timeoutInSeconds = silentRequestTimeoutInSeconds;\n    this._frame = IFrameWindow.createHiddenIframe();\n    this._window = this._frame.contentWindow;\n  }\n  static createHiddenIframe() {\n    const iframe = window.document.createElement(\"iframe\");\n    iframe.style.visibility = \"hidden\";\n    iframe.style.position = \"fixed\";\n    iframe.style.left = \"-1000px\";\n    iframe.style.top = \"0\";\n    iframe.width = \"0\";\n    iframe.height = \"0\";\n    iframe.setAttribute(\"sandbox\", \"allow-scripts allow-same-origin allow-forms\");\n    window.document.body.appendChild(iframe);\n    return iframe;\n  }\n  async navigate(params) {\n    this._logger.debug(\"navigate: Using timeout of:\", this._timeoutInSeconds);\n    const timer = setTimeout(() => this._abort.raise(new ErrorTimeout(\"IFrame timed out without a response\")), this._timeoutInSeconds * 1e3);\n    this._disposeHandlers.add(() => clearTimeout(timer));\n    return await super.navigate(params);\n  }\n  close() {\n    var _a;\n    if (this._frame) {\n      if (this._frame.parentNode) {\n        this._frame.addEventListener(\"load\", (ev) => {\n          var _a2;\n          const frame = ev.target;\n          (_a2 = frame.parentNode) == null ? void 0 : _a2.removeChild(frame);\n          this._abort.raise(new Error(\"IFrame removed from DOM\"));\n        }, true);\n        (_a = this._frame.contentWindow) == null ? void 0 : _a.location.replace(\"about:blank\");\n      }\n      this._frame = null;\n    }\n    this._window = null;\n  }\n  static notifyParent(url, targetOrigin) {\n    return super._notifyParent(window.parent, url, false, targetOrigin);\n  }\n};\n\n// src/navigators/IFrameNavigator.ts\nvar IFrameNavigator = class {\n  constructor(_settings) {\n    this._settings = _settings;\n    this._logger = new Logger(\"IFrameNavigator\");\n  }\n  async prepare({\n    silentRequestTimeoutInSeconds = this._settings.silentRequestTimeoutInSeconds\n  }) {\n    return new IFrameWindow({ silentRequestTimeoutInSeconds });\n  }\n  async callback(url) {\n    this._logger.create(\"callback\");\n    IFrameWindow.notifyParent(url, this._settings.iframeNotifyParentOrigin);\n  }\n};\n\n// src/navigators/PopupWindow.ts\nvar checkForPopupClosedInterval = 500;\nvar PopupWindow = class extends AbstractChildWindow {\n  constructor({\n    popupWindowTarget = DefaultPopupTarget,\n    popupWindowFeatures = {}\n  }) {\n    super();\n    this._logger = new Logger(\"PopupWindow\");\n    const centeredPopup = PopupUtils.center({ ...DefaultPopupWindowFeatures, ...popupWindowFeatures });\n    this._window = window.open(void 0, popupWindowTarget, PopupUtils.serialize(centeredPopup));\n  }\n  async navigate(params) {\n    var _a;\n    (_a = this._window) == null ? void 0 : _a.focus();\n    const popupClosedInterval = setInterval(() => {\n      if (!this._window || this._window.closed) {\n        this._abort.raise(new Error(\"Popup closed by user\"));\n      }\n    }, checkForPopupClosedInterval);\n    this._disposeHandlers.add(() => clearInterval(popupClosedInterval));\n    return await super.navigate(params);\n  }\n  close() {\n    if (this._window) {\n      if (!this._window.closed) {\n        this._window.close();\n        this._abort.raise(new Error(\"Popup closed\"));\n      }\n    }\n    this._window = null;\n  }\n  static notifyOpener(url, keepOpen) {\n    if (!window.opener) {\n      throw new Error(\"No window.opener. Can't complete notification.\");\n    }\n    return super._notifyParent(window.opener, url, keepOpen);\n  }\n};\n\n// src/navigators/PopupNavigator.ts\nvar PopupNavigator = class {\n  constructor(_settings) {\n    this._settings = _settings;\n    this._logger = new Logger(\"PopupNavigator\");\n  }\n  async prepare({\n    popupWindowFeatures = this._settings.popupWindowFeatures,\n    popupWindowTarget = this._settings.popupWindowTarget\n  }) {\n    return new PopupWindow({ popupWindowFeatures, popupWindowTarget });\n  }\n  async callback(url, keepOpen = false) {\n    this._logger.create(\"callback\");\n    PopupWindow.notifyOpener(url, keepOpen);\n  }\n};\n\n// src/navigators/RedirectNavigator.ts\nvar RedirectNavigator = class {\n  constructor(_settings) {\n    this._settings = _settings;\n    this._logger = new Logger(\"RedirectNavigator\");\n  }\n  async prepare({\n    redirectMethod = this._settings.redirectMethod,\n    redirectTarget = this._settings.redirectTarget\n  }) {\n    var _a;\n    this._logger.create(\"prepare\");\n    let targetWindow = window.self;\n    if (redirectTarget === \"top\") {\n      targetWindow = (_a = window.top) != null ? _a : window.self;\n    }\n    const redirect = targetWindow.location[redirectMethod].bind(targetWindow.location);\n    let abort;\n    return {\n      navigate: async (params) => {\n        this._logger.create(\"navigate\");\n        const promise = new Promise((resolve, reject) => {\n          abort = reject;\n        });\n        redirect(params.url);\n        return await promise;\n      },\n      close: () => {\n        this._logger.create(\"close\");\n        abort == null ? void 0 : abort(new Error(\"Redirect aborted\"));\n        targetWindow.stop();\n      }\n    };\n  }\n};\n\n// src/UserManagerEvents.ts\nvar UserManagerEvents = class extends AccessTokenEvents {\n  constructor(settings) {\n    super({ expiringNotificationTimeInSeconds: settings.accessTokenExpiringNotificationTimeInSeconds });\n    this._logger = new Logger(\"UserManagerEvents\");\n    this._userLoaded = new Event(\"User loaded\");\n    this._userUnloaded = new Event(\"User unloaded\");\n    this._silentRenewError = new Event(\"Silent renew error\");\n    this._userSignedIn = new Event(\"User signed in\");\n    this._userSignedOut = new Event(\"User signed out\");\n    this._userSessionChanged = new Event(\"User session changed\");\n  }\n  load(user, raiseEvent = true) {\n    super.load(user);\n    if (raiseEvent) {\n      this._userLoaded.raise(user);\n    }\n  }\n  unload() {\n    super.unload();\n    this._userUnloaded.raise();\n  }\n  addUserLoaded(cb) {\n    return this._userLoaded.addHandler(cb);\n  }\n  removeUserLoaded(cb) {\n    return this._userLoaded.removeHandler(cb);\n  }\n  addUserUnloaded(cb) {\n    return this._userUnloaded.addHandler(cb);\n  }\n  removeUserUnloaded(cb) {\n    return this._userUnloaded.removeHandler(cb);\n  }\n  addSilentRenewError(cb) {\n    return this._silentRenewError.addHandler(cb);\n  }\n  removeSilentRenewError(cb) {\n    return this._silentRenewError.removeHandler(cb);\n  }\n  _raiseSilentRenewError(e) {\n    this._silentRenewError.raise(e);\n  }\n  addUserSignedIn(cb) {\n    return this._userSignedIn.addHandler(cb);\n  }\n  removeUserSignedIn(cb) {\n    this._userSignedIn.removeHandler(cb);\n  }\n  _raiseUserSignedIn() {\n    this._userSignedIn.raise();\n  }\n  addUserSignedOut(cb) {\n    return this._userSignedOut.addHandler(cb);\n  }\n  removeUserSignedOut(cb) {\n    this._userSignedOut.removeHandler(cb);\n  }\n  _raiseUserSignedOut() {\n    this._userSignedOut.raise();\n  }\n  addUserSessionChanged(cb) {\n    return this._userSessionChanged.addHandler(cb);\n  }\n  removeUserSessionChanged(cb) {\n    this._userSessionChanged.removeHandler(cb);\n  }\n  _raiseUserSessionChanged() {\n    this._userSessionChanged.raise();\n  }\n};\n\n// src/SilentRenewService.ts\nvar SilentRenewService = class {\n  constructor(_userManager) {\n    this._userManager = _userManager;\n    this._logger = new Logger(\"SilentRenewService\");\n    this._isStarted = false;\n    this._retryTimer = new Timer(\"Retry Silent Renew\");\n    this._tokenExpiring = async () => {\n      const logger2 = this._logger.create(\"_tokenExpiring\");\n      try {\n        await this._userManager.signinSilent();\n        logger2.debug(\"silent token renewal successful\");\n      } catch (err) {\n        if (err instanceof ErrorTimeout) {\n          logger2.warn(\"ErrorTimeout from signinSilent:\", err, \"retry in 5s\");\n          this._retryTimer.init(5);\n          return;\n        }\n        logger2.error(\"Error from signinSilent:\", err);\n        this._userManager.events._raiseSilentRenewError(err);\n      }\n    };\n  }\n  async start() {\n    const logger2 = this._logger.create(\"start\");\n    if (!this._isStarted) {\n      this._isStarted = true;\n      this._userManager.events.addAccessTokenExpiring(this._tokenExpiring);\n      this._retryTimer.addHandler(this._tokenExpiring);\n      try {\n        await this._userManager.getUser();\n      } catch (err) {\n        logger2.error(\"getUser error\", err);\n      }\n    }\n  }\n  stop() {\n    if (this._isStarted) {\n      this._retryTimer.cancel();\n      this._retryTimer.removeHandler(this._tokenExpiring);\n      this._userManager.events.removeAccessTokenExpiring(this._tokenExpiring);\n      this._isStarted = false;\n    }\n  }\n};\n\n// src/RefreshState.ts\nvar RefreshState = class {\n  constructor(args) {\n    this.refresh_token = args.refresh_token;\n    this.id_token = args.id_token;\n    this.session_state = args.session_state;\n    this.scope = args.scope;\n    this.data = args.state;\n  }\n};\n\n// src/UserManager.ts\nvar UserManager = class {\n  constructor(settings) {\n    this._logger = new Logger(\"UserManager\");\n    this.settings = new UserManagerSettingsStore(settings);\n    this._client = new OidcClient(settings);\n    this._redirectNavigator = new RedirectNavigator(this.settings);\n    this._popupNavigator = new PopupNavigator(this.settings);\n    this._iframeNavigator = new IFrameNavigator(this.settings);\n    this._events = new UserManagerEvents(this.settings);\n    this._silentRenewService = new SilentRenewService(this);\n    if (this.settings.automaticSilentRenew) {\n      this.startSilentRenew();\n    }\n    this._sessionMonitor = null;\n    if (this.settings.monitorSession) {\n      this._sessionMonitor = new SessionMonitor(this);\n    }\n  }\n  get events() {\n    return this._events;\n  }\n  get metadataService() {\n    return this._client.metadataService;\n  }\n  async getUser() {\n    const logger2 = this._logger.create(\"getUser\");\n    const user = await this._loadUser();\n    if (user) {\n      logger2.info(\"user loaded\");\n      this._events.load(user, false);\n      return user;\n    }\n    logger2.info(\"user not found in storage\");\n    return null;\n  }\n  async removeUser() {\n    const logger2 = this._logger.create(\"removeUser\");\n    await this.storeUser(null);\n    logger2.info(\"user removed from storage\");\n    this._events.unload();\n  }\n  async signinRedirect(args = {}) {\n    this._logger.create(\"signinRedirect\");\n    const {\n      redirectMethod,\n      ...requestArgs\n    } = args;\n    const handle = await this._redirectNavigator.prepare({ redirectMethod });\n    await this._signinStart({\n      request_type: \"si:r\",\n      ...requestArgs\n    }, handle);\n  }\n  async signinRedirectCallback(url = window.location.href) {\n    const logger2 = this._logger.create(\"signinRedirectCallback\");\n    const user = await this._signinEnd(url);\n    if (user.profile && user.profile.sub) {\n      logger2.info(\"success, signed in subject\", user.profile.sub);\n    } else {\n      logger2.info(\"no subject\");\n    }\n    return user;\n  }\n  async signinPopup(args = {}) {\n    const logger2 = this._logger.create(\"signinPopup\");\n    const {\n      popupWindowFeatures,\n      popupWindowTarget,\n      ...requestArgs\n    } = args;\n    const url = this.settings.popup_redirect_uri;\n    if (!url) {\n      logger2.throw(new Error(\"No popup_redirect_uri configured\"));\n    }\n    const handle = await this._popupNavigator.prepare({ popupWindowFeatures, popupWindowTarget });\n    const user = await this._signin({\n      request_type: \"si:p\",\n      redirect_uri: url,\n      display: \"popup\",\n      ...requestArgs\n    }, handle);\n    if (user) {\n      if (user.profile && user.profile.sub) {\n        logger2.info(\"success, signed in subject\", user.profile.sub);\n      } else {\n        logger2.info(\"no subject\");\n      }\n    }\n    return user;\n  }\n  async signinPopupCallback(url = window.location.href, keepOpen = false) {\n    const logger2 = this._logger.create(\"signinPopupCallback\");\n    await this._popupNavigator.callback(url, keepOpen);\n    logger2.info(\"success\");\n  }\n  async signinSilent(args = {}) {\n    var _a;\n    const logger2 = this._logger.create(\"signinSilent\");\n    const {\n      silentRequestTimeoutInSeconds,\n      ...requestArgs\n    } = args;\n    let user = await this._loadUser();\n    if (user == null ? void 0 : user.refresh_token) {\n      logger2.debug(\"using refresh token\");\n      const state = new RefreshState(user);\n      return await this._useRefreshToken(state);\n    }\n    const url = this.settings.silent_redirect_uri;\n    if (!url) {\n      logger2.throw(new Error(\"No silent_redirect_uri configured\"));\n    }\n    let verifySub;\n    if (user && this.settings.validateSubOnSilentRenew) {\n      logger2.debug(\"subject prior to silent renew:\", user.profile.sub);\n      verifySub = user.profile.sub;\n    }\n    const handle = await this._iframeNavigator.prepare({ silentRequestTimeoutInSeconds });\n    user = await this._signin({\n      request_type: \"si:s\",\n      redirect_uri: url,\n      prompt: \"none\",\n      id_token_hint: this.settings.includeIdTokenInSilentRenew ? user == null ? void 0 : user.id_token : void 0,\n      ...requestArgs\n    }, handle, verifySub);\n    if (user) {\n      if ((_a = user.profile) == null ? void 0 : _a.sub) {\n        logger2.info(\"success, signed in subject\", user.profile.sub);\n      } else {\n        logger2.info(\"no subject\");\n      }\n    }\n    return user;\n  }\n  async _useRefreshToken(state) {\n    const response = await this._client.useRefreshToken({\n      state,\n      timeoutInSeconds: this.settings.silentRequestTimeoutInSeconds\n    });\n    const user = new User({ ...state, ...response });\n    await this.storeUser(user);\n    this._events.load(user);\n    return user;\n  }\n  async signinSilentCallback(url = window.location.href) {\n    const logger2 = this._logger.create(\"signinSilentCallback\");\n    await this._iframeNavigator.callback(url);\n    logger2.info(\"success\");\n  }\n  async signinCallback(url = window.location.href) {\n    const { state } = await this._client.readSigninResponseState(url);\n    switch (state.request_type) {\n      case \"si:r\":\n        return await this.signinRedirectCallback(url);\n      case \"si:p\":\n        return await this.signinPopupCallback(url);\n      case \"si:s\":\n        return await this.signinSilentCallback(url);\n      default:\n        throw new Error(\"invalid response_type in state\");\n    }\n  }\n  async signoutCallback(url = window.location.href, keepOpen = false) {\n    const { state } = await this._client.readSignoutResponseState(url);\n    if (!state) {\n      return;\n    }\n    switch (state.request_type) {\n      case \"so:r\":\n        await this.signoutRedirectCallback(url);\n        break;\n      case \"so:p\":\n        await this.signoutPopupCallback(url, keepOpen);\n        break;\n      default:\n        throw new Error(\"invalid response_type in state\");\n    }\n  }\n  async querySessionStatus(args = {}) {\n    const logger2 = this._logger.create(\"querySessionStatus\");\n    const {\n      silentRequestTimeoutInSeconds,\n      ...requestArgs\n    } = args;\n    const url = this.settings.silent_redirect_uri;\n    if (!url) {\n      logger2.throw(new Error(\"No silent_redirect_uri configured\"));\n    }\n    const user = await this._loadUser();\n    const handle = await this._iframeNavigator.prepare({ silentRequestTimeoutInSeconds });\n    const navResponse = await this._signinStart({\n      request_type: \"si:s\",\n      redirect_uri: url,\n      prompt: \"none\",\n      id_token_hint: this.settings.includeIdTokenInSilentRenew ? user == null ? void 0 : user.id_token : void 0,\n      response_type: this.settings.query_status_response_type,\n      scope: \"openid\",\n      skipUserInfo: true,\n      ...requestArgs\n    }, handle);\n    try {\n      const signinResponse = await this._client.processSigninResponse(navResponse.url);\n      logger2.debug(\"got signin response\");\n      if (signinResponse.session_state && signinResponse.profile.sub) {\n        logger2.info(\"success for subject\", signinResponse.profile.sub);\n        return {\n          session_state: signinResponse.session_state,\n          sub: signinResponse.profile.sub,\n          sid: signinResponse.profile.sid\n        };\n      }\n      logger2.info(\"success, user not authenticated\");\n      return null;\n    } catch (err) {\n      if (this.settings.monitorAnonymousSession && err instanceof ErrorResponse) {\n        switch (err.error) {\n          case \"login_required\":\n          case \"consent_required\":\n          case \"interaction_required\":\n          case \"account_selection_required\":\n            logger2.info(\"success for anonymous user\");\n            return {\n              session_state: err.session_state\n            };\n        }\n      }\n      throw err;\n    }\n  }\n  async _signin(args, handle, verifySub) {\n    const navResponse = await this._signinStart(args, handle);\n    return await this._signinEnd(navResponse.url, verifySub);\n  }\n  async _signinStart(args, handle) {\n    const logger2 = this._logger.create(\"_signinStart\");\n    try {\n      const signinRequest = await this._client.createSigninRequest(args);\n      logger2.debug(\"got signin request\");\n      return await handle.navigate({\n        url: signinRequest.url,\n        state: signinRequest.state.id,\n        response_mode: signinRequest.state.response_mode,\n        scriptOrigin: this.settings.iframeScriptOrigin\n      });\n    } catch (err) {\n      logger2.debug(\"error after preparing navigator, closing navigator window\");\n      handle.close();\n      throw err;\n    }\n  }\n  async _signinEnd(url, verifySub) {\n    const logger2 = this._logger.create(\"_signinEnd\");\n    const signinResponse = await this._client.processSigninResponse(url);\n    logger2.debug(\"got signin response\");\n    const user = new User(signinResponse);\n    if (verifySub) {\n      if (verifySub !== user.profile.sub) {\n        logger2.debug(\"current user does not match user returned from signin. sub from signin:\", user.profile.sub);\n        throw new ErrorResponse({ ...signinResponse, error: \"login_required\" });\n      }\n      logger2.debug(\"current user matches user returned from signin\");\n    }\n    await this.storeUser(user);\n    logger2.debug(\"user stored\");\n    this._events.load(user);\n    return user;\n  }\n  async signoutRedirect(args = {}) {\n    const logger2 = this._logger.create(\"signoutRedirect\");\n    const {\n      redirectMethod,\n      ...requestArgs\n    } = args;\n    const handle = await this._redirectNavigator.prepare({ redirectMethod });\n    await this._signoutStart({\n      request_type: \"so:r\",\n      post_logout_redirect_uri: this.settings.post_logout_redirect_uri,\n      ...requestArgs\n    }, handle);\n    logger2.info(\"success\");\n  }\n  async signoutRedirectCallback(url = window.location.href) {\n    const logger2 = this._logger.create(\"signoutRedirectCallback\");\n    const response = await this._signoutEnd(url);\n    logger2.info(\"success\");\n    return response;\n  }\n  async signoutPopup(args = {}) {\n    const logger2 = this._logger.create(\"signoutPopup\");\n    const {\n      popupWindowFeatures,\n      popupWindowTarget,\n      ...requestArgs\n    } = args;\n    const url = this.settings.popup_post_logout_redirect_uri;\n    const handle = await this._popupNavigator.prepare({ popupWindowFeatures, popupWindowTarget });\n    await this._signout({\n      request_type: \"so:p\",\n      post_logout_redirect_uri: url,\n      state: url == null ? void 0 : {},\n      ...requestArgs\n    }, handle);\n    logger2.info(\"success\");\n  }\n  async signoutPopupCallback(url = window.location.href, keepOpen = false) {\n    const logger2 = this._logger.create(\"signoutPopupCallback\");\n    await this._popupNavigator.callback(url, keepOpen);\n    logger2.info(\"success\");\n  }\n  async _signout(args, handle) {\n    const navResponse = await this._signoutStart(args, handle);\n    return await this._signoutEnd(navResponse.url);\n  }\n  async _signoutStart(args = {}, handle) {\n    var _a;\n    const logger2 = this._logger.create(\"_signoutStart\");\n    try {\n      const user = await this._loadUser();\n      logger2.debug(\"loaded current user from storage\");\n      if (this.settings.revokeTokensOnSignout) {\n        await this._revokeInternal(user);\n      }\n      const id_token = args.id_token_hint || user && user.id_token;\n      if (id_token) {\n        logger2.debug(\"setting id_token_hint in signout request\");\n        args.id_token_hint = id_token;\n      }\n      await this.removeUser();\n      logger2.debug(\"user removed, creating signout request\");\n      const signoutRequest = await this._client.createSignoutRequest(args);\n      logger2.debug(\"got signout request\");\n      return await handle.navigate({\n        url: signoutRequest.url,\n        state: (_a = signoutRequest.state) == null ? void 0 : _a.id\n      });\n    } catch (err) {\n      logger2.debug(\"error after preparing navigator, closing navigator window\");\n      handle.close();\n      throw err;\n    }\n  }\n  async _signoutEnd(url) {\n    const logger2 = this._logger.create(\"_signoutEnd\");\n    const signoutResponse = await this._client.processSignoutResponse(url);\n    logger2.debug(\"got signout response\");\n    return signoutResponse;\n  }\n  async revokeTokens(types) {\n    const user = await this._loadUser();\n    await this._revokeInternal(user, types);\n  }\n  async _revokeInternal(user, types = this.settings.revokeTokenTypes) {\n    const logger2 = this._logger.create(\"_revokeInternal\");\n    if (!user)\n      return;\n    const typesPresent = types.filter((type) => typeof user[type] === \"string\");\n    if (!typesPresent.length) {\n      logger2.debug(\"no need to revoke due to no token(s)\");\n      return;\n    }\n    for (const type of typesPresent) {\n      await this._client.revokeToken(\n        user[type],\n        type\n      );\n      logger2.info(`${type} revoked successfully`);\n      if (type !== \"access_token\") {\n        user[type] = null;\n      }\n    }\n    await this.storeUser(user);\n    logger2.debug(\"user stored\");\n    this._events.load(user);\n  }\n  startSilentRenew() {\n    this._logger.create(\"startSilentRenew\");\n    void this._silentRenewService.start();\n  }\n  stopSilentRenew() {\n    this._silentRenewService.stop();\n  }\n  get _userStoreKey() {\n    return `user:${this.settings.authority}:${this.settings.client_id}`;\n  }\n  async _loadUser() {\n    const logger2 = this._logger.create(\"_loadUser\");\n    const storageString = await this.settings.userStore.get(this._userStoreKey);\n    if (storageString) {\n      logger2.debug(\"user storageString loaded\");\n      return User.fromStorageString(storageString);\n    }\n    logger2.debug(\"no user storageString\");\n    return null;\n  }\n  async storeUser(user) {\n    const logger2 = this._logger.create(\"storeUser\");\n    if (user) {\n      logger2.debug(\"storing user\");\n      const storageString = user.toStorageString();\n      await this.settings.userStore.set(this._userStoreKey, storageString);\n    } else {\n      this._logger.debug(\"removing user\");\n      await this.settings.userStore.remove(this._userStoreKey);\n    }\n  }\n  async clearStaleState() {\n    await this._client.clearStaleState();\n  }\n};\n\n// package.json\nvar version = \"2.0.6\";\n\n// src/Version.ts\nvar Version = version;\nexport {\n  AccessTokenEvents,\n  CheckSessionIFrame,\n  ErrorResponse,\n  ErrorTimeout,\n  InMemoryWebStorage,\n  Log,\n  Logger,\n  MetadataService,\n  OidcClient,\n  OidcClientSettingsStore,\n  SessionMonitor,\n  SigninResponse,\n  SigninState,\n  SignoutResponse,\n  State,\n  User,\n  UserManager,\n  UserManagerSettingsStore,\n  Version,\n  WebStorageStateStore\n};\n//# sourceMappingURL=oidc-client-ts.js.map\n","export const mergeScopes = (\r\n    source?: string | string[],\r\n    target?: string | string[]\r\n) => {\r\n    source ||= [];\r\n    target ||= [];\r\n\r\n    if (!Array.isArray(source)) {\r\n        source = source.split(' ');\r\n    }\r\n\r\n    if (!Array.isArray(target)) {\r\n        target = target.split(' ');\r\n    }\r\n\r\n    return source\r\n        .concat(target)\r\n        .filter((value, pos, c) => c.indexOf(value) === pos)\r\n        .join(' ')\r\n        .trim();\r\n};\r\n","import { User, UserManager, UserManagerSettings } from 'oidc-client-ts';\r\nimport { mergeScopes } from './utils';\r\n\r\nexport const MULTICART_AUTH_SANDBOX_PATH =\r\n    'https://stage.identity.multicartshop.com';\r\nexport const MULTICART_AUTH_PROD_PATH = 'https://identity.multicartshop.com';\r\nexport const MULTICART_CLIENT_ID = 'Multicart.TypeScript.Client';\r\n\r\nexport interface MulticartOAuthConfigurationParameters {\r\n    client_id?: string;\r\n    redirect_uri?: string;\r\n    logout_redirect_uri?: string;\r\n\r\n    sandbox?: boolean;\r\n    basePath?: string;\r\n    client_secret?: string;\r\n    scopes?: string[];\r\n}\r\n\r\nexport class MulticartOAuthConfiguration {\r\n    constructor(\r\n        private configuration: MulticartOAuthConfigurationParameters = {}\r\n    ) {}\r\n\r\n    set config(configuration: MulticartOAuthConfiguration) {\r\n        this.configuration = configuration;\r\n    }\r\n\r\n    get sandbox(): boolean {\r\n        return !!this.configuration.sandbox;\r\n    }\r\n\r\n    get basePath(): string {\r\n        return this.configuration.basePath || this.sandbox\r\n            ? MULTICART_AUTH_SANDBOX_PATH\r\n            : MULTICART_AUTH_PROD_PATH;\r\n    }\r\n\r\n    get client_id(): string {\r\n        return this.configuration.client_id || MULTICART_CLIENT_ID;\r\n    }\r\n\r\n    get redirect_uri(): string {\r\n        return (\r\n            this.configuration.redirect_uri ||\r\n            window?.location.origin + '/login'\r\n        );\r\n    }\r\n\r\n    get logout_redirect_uri(): string {\r\n        return (\r\n            this.configuration.logout_redirect_uri ||\r\n            window?.location.origin + '/logout'\r\n        );\r\n    }\r\n\r\n    get client_secret(): string | undefined {\r\n        return this.configuration.client_secret;\r\n    }\r\n\r\n    get scopes(): string[] | undefined {\r\n        return this.configuration.scopes;\r\n    }\r\n}\r\n\r\nexport const DefaultMulticartOAuthConfig = new MulticartOAuthConfiguration();\r\n\r\n/**\r\n * Provides a higher level API for signing a user in, signing out, managing the user's claims returned from the OIDC provider,\r\n * and managing an access token returned from the OIDC/OAuth2 provider.\r\n *\r\n * @public\r\n */\r\nexport class MulticartOAuthClient extends UserManager {\r\n    constructor(protected configuration = DefaultMulticartOAuthConfig) {\r\n        const umSettings: UserManagerSettings = {\r\n            authority: configuration.basePath,\r\n            loadUserInfo: true,\r\n            client_id: configuration.client_id,\r\n            redirect_uri: configuration.redirect_uri,\r\n            post_logout_redirect_uri: configuration.logout_redirect_uri,\r\n            client_secret: configuration.client_secret,\r\n            scope: mergeScopes(configuration.scopes),\r\n        };\r\n\r\n        super(umSettings);\r\n    }\r\n\r\n    public async signinPasswordGrant({\r\n        username,\r\n        password,\r\n    }: {\r\n        username: string;\r\n        password: string;\r\n    }) {\r\n        const args = {\r\n            extraQueryParams: { username, password, grant_type: 'password' },\r\n        };\r\n\r\n        return this.signinSilent(args);\r\n    }\r\n\r\n    public async signinClientCredentials({\r\n        scopes,\r\n    }: { scopes?: string[] } = {}) {\r\n        const logger = this._logger.create('signinClientCredentials');\r\n        const url = await this.metadataService\r\n            .getTokenEndpoint()\r\n            .catch((reason) => logger.error(reason));\r\n\r\n        if (!url) {\r\n            throw new Error('Token endpoint not be empty');\r\n        }\r\n        const {\r\n            client_id,\r\n            client_secret,\r\n            scope: scopeInternal,\r\n        } = this.settings;\r\n\r\n        const scope = mergeScopes(scopeInternal, scopes);\r\n\r\n        if (!client_secret) {\r\n            throw new Error('No client_secret configured');\r\n        }\r\n\r\n        try {\r\n            const r = await fetch(url, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/x-www-form-urlencoded',\r\n                },\r\n                body: new URLSearchParams({\r\n                    grant_type: 'client_credentials',\r\n                    client_id,\r\n                    client_secret,\r\n                    scope,\r\n                }).toString(),\r\n                mode: 'cors',\r\n            });\r\n            const resp = await r.json();\r\n\r\n            const user = new User(resp);\r\n            user.expires_at =\r\n                Math.floor(Date.now() / 1000) + (resp.expires_in ?? 0);\r\n\r\n            await this.storeUser(user);\r\n            logger.debug('user stored');\r\n            this._events.load(user);\r\n            return user;\r\n        } catch (e) {\r\n            logger.error(`Login failed`, e);\r\n            throw new Error('Login failed');\r\n        }\r\n    }\r\n}\r\n"],"names":["__viteBrowserExternal","root","factory","module","this","CryptoJS","Math","undefined","crypto","global","require","require$$0","cryptoSecureRandomInt","create","F","obj","subtype","C","C_lib","Base","overrides","instance","properties","propertyName","WordArray","words","sigBytes","encoder","Hex","wordArray","thisWords","thatWords","thisSigBytes","thatSigBytes","i","thatByte","j","clone","nBytes","C_enc","hexChars","bite","hexStr","hexStrLength","Latin1","latin1Chars","latin1Str","latin1StrLength","Utf8","utf8Str","BufferedBlockAlgorithm","data","doFlush","processedWords","dataWords","dataSigBytes","blockSize","blockSizeBytes","nBlocksReady","nWordsReady","nBytesReady","offset","cfg","messageUpdate","hash","hasher","message","key","C_algo","Hasher","H","K","isPrime","n","sqrtN","factor","getFractionalBits","nPrime","W","SHA256","M","a","b","c","e","f","g","h","gamma0x","gamma0","gamma1x","gamma1","ch","maj","sigma0","sigma1","t1","t2","nBitsTotal","nBitsLeft","map","base64Chars","byte1","byte2","byte3","triplet","paddingChar","base64Str","base64StrLength","reverseMap","paddingIndex","parseLoop","bits1","bits2","bitsCombined","r","o","t","nopLogger","level","logger","Log","Log2","reset","setLevel","value","setLogger","Logger","_name","args","err","method","methodLogger","name","staticMethod","staticLogger","prefix","UUID_V4_TEMPLATE","CryptoUtils","code_verifier","hashed","sha256","Base64","client_id","client_secret","basicAuth","Event","cb","idx","ev","JwtUtils","token","jwt_decode","PopupUtils","features","_a","_b","_c","width","Timer","diff","durationInSeconds","logger2","expiration","timerDurationInSeconds","UrlUtils","url","responseMode","params","ErrorResponse","form","ErrorTimeout","AccessTokenEvents","container","duration","expiring","expired","CheckSessionIFrame","_callback","_client_id","_intervalInSeconds","_stopOnError","parsedUrl","resolve","session_state","send","InMemoryWebStorage","index","JsonService","additionalContentTypes","_jwtHandler","input","init","timeoutInSeconds","initFetch","controller","timeoutId","headers","response","contentType","item","json","body","initCredentials","responseText","MetadataService","_settings","metadata","optional","jwks_uri","keySet","WebStorageStateStore","store","keys","DefaultResponseType","DefaultScope","DefaultClientAuthentication","DefaultResponseMode","DefaultStaleStateAgeInSeconds","DefaultClockSkewInSeconds","OidcClientSettingsStore","authority","metadataUrl","signingKeys","metadataSeed","response_type","scope","redirect_uri","post_logout_redirect_uri","client_authentication","prompt","display","max_age","ui_locales","acr_values","resource","response_mode","filterProtocolClaims","loadUserInfo","staleStateAgeInSeconds","clockSkewInSeconds","userInfoJwtIssuer","mergeClaims","stateStore","refreshTokenCredentials","extraQueryParams","extraTokenParams","UserInfoService","_metadataService","payload","claims","TokenClient","grant_type","ProtocolClaims","ResponseValidator","state","hasIdToken","skipUserInfo","validateSub","claims1","claims2","result","claim","values","previousValue","type","tokenResponse","currentToken","profile","current","State","storageString","storage","age","cutoff","remove","SigninState","SigninRequest","state_data","request_type","nonce","optionalParams","OidcScope","SigninResponse","SignoutRequest","id_token_hint","SignoutResponse","OidcClient","settings","request","request_uri","login_hint","signinRequest","signinState","removeState","storedStateString","signoutState","SessionMonitor","_userManager","user","intervalInSeconds","stopOnError","checkSessionIFrame","timerHandle","session","tmpUser","raiseEvent","User","expires_in","messageSource","AbstractChildWindow","keepOpen","reject","listener","origin","reason","dispose","parent","targetOrigin","DefaultPopupWindowFeatures","DefaultPopupTarget","DefaultAccessTokenExpiringNotificationTimeInSeconds","DefaultCheckSessionIntervalInSeconds","DefaultSilentRequestTimeoutInSeconds","UserManagerSettingsStore","popup_redirect_uri","popup_post_logout_redirect_uri","popupWindowFeatures","popupWindowTarget","redirectMethod","redirectTarget","iframeNotifyParentOrigin","iframeScriptOrigin","silent_redirect_uri","silentRequestTimeoutInSeconds","automaticSilentRenew","validateSubOnSilentRenew","includeIdTokenInSilentRenew","monitorSession","monitorAnonymousSession","checkSessionIntervalInSeconds","query_status_response_type","stopCheckSessionOnError","revokeTokenTypes","revokeTokensOnSignout","accessTokenExpiringNotificationTimeInSeconds","userStore","IFrameWindow","iframe","timer","_a2","frame","IFrameNavigator","checkForPopupClosedInterval","PopupWindow","centeredPopup","popupClosedInterval","PopupNavigator","RedirectNavigator","targetWindow","redirect","abort","promise","UserManagerEvents","SilentRenewService","RefreshState","UserManager","requestArgs","handle","verifySub","navResponse","signinResponse","id_token","signoutRequest","signoutResponse","types","typesPresent","version","Version","mergeScopes","source","target","pos","MULTICART_AUTH_SANDBOX_PATH","MULTICART_AUTH_PROD_PATH","MULTICART_CLIENT_ID","MulticartOAuthConfiguration","configuration","DefaultMulticartOAuthConfig","MulticartOAuthClient","umSettings","username","password","scopes","scopeInternal","resp"],"mappings":"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"}